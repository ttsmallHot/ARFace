<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XCSJ.EditorCommonUtils</name>
    </assembly>
    <members>
        <member name="T:XCSJ.EditorCommonUtils.EditorAssetHelper">
            <summary>
            编辑器资产辅助类
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorAssetHelper.Load``1(System.String,System.String,System.Boolean)">
            <summary>
            加载路径下的资产文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dirPath"></param>
            <param name="fileExtension"></param>
            <param name="includeChildrenDirectory"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.BaseInspector">
            <summary>
            基础检查器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.BaseInspector.ScriptCodePropertyName">
            <summary>
            脚本代码属性名；脚本代码文件对应的<see cref="T:UnityEditor.MonoScript"/>对象的属性名；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.BaseInspector.editors">
            <summary>
            编辑器列表
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.CheckEditors">
            <summary>
            检查缓存的编辑器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetEditorType(System.Type,System.Boolean)">
            <summary>
            获取编辑器类型
            </summary>
            <param name="unityObjectType"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetEditorType(UnityEngine.Object,System.Boolean)">
            <summary>
            获取编辑器类型
            </summary>
            <param name="obj"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetEditor(UnityEngine.Object)">
            <summary>
            获取对象对应的编辑器
            </summary>
            <param name="obj">期望获取的对象</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.CreateInspector(UnityEngine.Object,System.Boolean)">
            <summary>
            创建检查器
            </summary>
            <param name="obj"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawEditor(UnityEngine.Object,System.Boolean)">
            <summary>
            绘制对象对应的编辑器
            </summary>
            <param name="obj">期望绘制的对象</param>
            <param name="drawScriptObject"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawEditor(UnityEditor.Editor,System.Boolean)">
            <summary>
            绘制编辑器
            </summary>
            <param name="editor">期望绘制的编辑器</param>
            <param name="drawScriptObject"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.targetType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.targetPropertyCache">
            <summary>
            目标属性缓存：目标对象<see cref="P:UnityEditor.Editor.target"/>的属性缓存
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.scriptLabel">
            <summary>
            脚本标签
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrByTarget(System.String)">
            <summary>
            通过目标翻译：使用目标属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.targetPropertyCache"/>翻译
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabelByTarget(UnityEditor.SerializedProperty)">
            <summary>
            通过目标翻译标签：使用目标属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.targetPropertyCache"/>翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabelByTarget(System.String)">
            <summary>
            通过目标翻译标签：使用目标属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.targetPropertyCache"/>翻译标签
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabelByTarget(System.String,XCSJ.PluginCommonUtils.ENameTip)">
            <summary>
            通过目标翻译标签：使用目标属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.targetPropertyCache"/>翻译标签
            </summary>
            <param name="propertyPath"></param>
            <param name="nameTip"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.propertyCache">
            <summary>
            属性缓存：当前检查器对象的属性缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.Tr(System.String)">
            <summary>
            翻译：使用属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.propertyCache"/>翻译
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabel(UnityEditor.SerializedProperty)">
            <summary>
            翻译标签：使用属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.propertyCache"/>翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabel(System.String)">
            <summary>
            翻译标签：使用属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.propertyCache"/>翻译标签
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.TrLabel(System.String,XCSJ.PluginCommonUtils.ENameTip)">
            <summary>
            翻译标签：使用属性缓存<see cref="P:XCSJ.EditorCommonUtils.BaseInspector.propertyCache"/>翻译标签
            </summary>
            <param name="propertyPath"></param>
            <param name="nameTip"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.languageCache">
            <summary>
            语言缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnLanguageCacheChanged">
            <summary>
            当缓存变更后回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.StartCache">
            <summary>
            启动缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.StopCache">
            <summary>
            停止缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnUndoRedoPerformed">
            <summary>
            当执行撤消重做时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnOptionModify(XCSJ.Tools.Option)">
            <summary>
            当首选项的配置发生修改时回调
            </summary>
            <param name="option">发生修改的配置对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnPlayModeStateChanged(UnityEditor.PlayModeStateChange)">
            <summary>
            当播放模式状态已变化
            </summary>
            <param name="playMode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetDrawingInspector(UnityEditor.SerializedProperty)">
            <summary>
            获取正在绘制的检查器
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.drawStack">
            <summary>
            检查器绘制堆栈
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.HasAccess">
            <summary>
            有权限
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnInspectorGUI">
            <summary>
            当绘制检查器GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetTrLabel(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent)">
            <summary>
            获取翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.BaseInspector._drawScriptObject">
            <summary>
            绘制脚本对象:标识是否绘制脚本对象,即绘制<see cref="T:UnityEditor.MonoScript"/>对象；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.drawScriptObject">
            <summary>
            绘制脚本对象:标识是否绘制脚本对象,即绘制<see cref="T:UnityEditor.MonoScript"/>对象；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawScript(UnityEditor.SerializedProperty)">
            <summary>
            当绘制脚本
            </summary>
            <param name="serializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawMemberAlways(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员时总是回调：函数内部会分析并处理序列化属性对应的字段信息上的各种修饰特性；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnBeforeDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员之前：主要用于开始处理组、有效性、只读、隐藏等特性；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.CanDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            能绘制成员：用于判断能否后续执行<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)"/>
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员：当序列化属性对应的字段信息被隐藏或不显示时，本函数不会回调；分析序列化属性，如果有直接绘制器则直接调用绘制，否者认为是通用成员并进行其子成员绘制（会调用<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)"/>）；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnAfterDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员之后：主要用于结束处理组、有效性、只读、隐藏等特性；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.HasTrLabel(System.String)">
            <summary>
            已翻译标签
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.HasTrLabel(UnityEditor.SerializedProperty)">
            <summary>
            已翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent)">
            <summary>
            绘制成员
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制通用成员时回调：函数内部默认根据<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMemberHead(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)"/>返回值情况，确定是否绘制通用成员子级（即是否调用<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMemberChildren(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)"/>）
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMemberHead(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制通用成员头部：当绘制如类（包括数组、列表、自定义序列化类）、结构体的根展开项头部时回调，通常仅用于绘制该头部控件；如果对应成员有专用的属性绘制器或已经是Unity可直接绘制的基础类型时，本函数不再回调；函数内部默认调用<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.DrawGenericMemberHeadIfAllow(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)"/>
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns>返回值标识是否继续绘制当前序列化属性的成员，即头部是否展开；</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMemberChildren(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制通用成员子级：在<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawGenericMemberHead(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)"/>返回值为真的情况下，本函数才会回调；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.CallOnDrawGenericMemberHead(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            调用当绘制通用成员成员头部
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawGenericMemberHeadIfAllow(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            如果允许则绘制通用成员头部：即考虑<see cref="T:XCSJ.Attributes.OnlyMemberElementsAttribute"/>特性修饰字段的情况，以判断是否绘制头部；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns>如果期望绘制通用成员子级，则返回True，此时有可能不执行绘制头部；否则返回Flase；</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawGenericMemberHead(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            绘制通用成员头部
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns>如果期望绘制通用成员子级，返回True；否者返回Flase；</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawGenericMemberChildren(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            绘制通用成员子级
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawArraySize(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制数组大小时回调：默认调用<see cref="M:XCSJ.EditorCommonUtils.BaseInspector.DrawArraySizeIfAllow(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)"/>
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawArraySizeIfAllow(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            如果允许则绘制数组大小：即考虑各种特性修饰字段的情况，以判断是否新行显示数组大小；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DrawArraySize(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            绘制数组大小：新行绘制数组大小；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.HandleException(System.Exception)">
            <summary>
            处理异常
            </summary>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.HandleException(System.Exception,System.String)">
            <summary>
            处理异常
            </summary>
            <param name="explane">异常解释</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.displayHelpInfo">
            <summary>
            标识是否显示辅助信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.displayRuntimeHelpInfo">
            <summary>
            标识是否显示运行时辅助信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.helpInfoMessageType">
            <summary>
            辅助信息类型
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.BaseInspector.helpInfoStringBuilder">
            <summary>
            辅助信息字符串生成器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetHelpInfo">
            <summary>
            获取辅助信息；将辅助信息字符串生成器对象清空后返回；
            </summary>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.BaseInspector.runtimeHelpInfoStringBuilder">
            <summary>
            运行时辅助信息字符串生成器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.GetRuntimeHelpInfo">
            <summary>
            获取运行时辅助信息；将运行时辅助信息字符串生成器对象清空后返回；
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.DefaultDrawHelpInfo">
            <summary>
            默认绘制辅助信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnDrawHelpInfo">
            <summary>
            绘制辅助信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.StartTimedRepaint">
            <summary>
            开始定时绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.timedRepaint">
            <summary>
            定时绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector.timeRepaintIntervalTime">
            <summary>
            定时绘制间隔时间
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseInspector.OnTimedRepaint">
            <summary>
            当定时绘制时回调：默认调用<see cref="M:UnityEditor.Editor.Repaint"/>方法；
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.BaseInspector`1">
            <summary>
            基础检查器模版类
            </summary>
            <typeparam name="T">继承于<see cref="T:UnityEngine.Object"/>的子类</typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.BaseInspector`1.targetObject">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.MBInspector">
            <summary>
            MB对应的默认Inspector类;所有MB类(含)子类的默认在Inspector窗口中绘制编辑器类;
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.MBInspector`1">
            <summary>
            MB对应的模版Inspector类
            </summary>
            <typeparam name="TMB"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.MBInspector`1.mb">
            <summary>
            MB模版类型的对象
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.CreateComponentInternal">
            <summary>
            创建组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.CreateComponentInternal``1">
            <summary>
            创建组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型
            </summary>
            <typeparam name="TComponent">待创建的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.CreateComponentWithRequireInternal``1">
            <summary>
            创建带必要组件的组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型，同时该游戏对象上存在必要的组件类型；
            </summary>
            <typeparam name="TRequireComponent">必要的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.CreateComponentWithRequireInternal``2">
            <summary>
            创建带必要组件的组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型，同时该游戏对象上存在必要的组件类型；
            </summary>
            <typeparam name="TComponent">待创建的组件类型</typeparam>
            <typeparam name="TRequireComponent">必要的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.ValidateCreateComponentInternal">
            <summary>
            验证创建组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.ValidateCreateComponentInternal``1">
            <summary>
            验证创建组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型
            </summary>
            <typeparam name="TComponent">待创建的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.ValidateCreateComponentWithRequireInternal``1">
            <summary>
            验证创建带必要组件的组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型，同时该游戏对象上存在必要的组件类型；
            </summary>
            <typeparam name="TRequireComponent">必要的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MBInspector`1.ValidateCreateComponentWithRequireInternal``2">
            <summary>
            验证创建带必要组件的组件：要求编辑器选择集游戏对象有效，并且该游戏对象上没有待创建的组件类型，同时该游戏对象上存在必要的组件类型；
            </summary>
            <typeparam name="TComponent">待创建的组件类型</typeparam>
            <typeparam name="TRequireComponent">必要的组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.SOInspector">
            <summary>
            SO对应的默认Inspector类;所有SO类(含)子类的默认在Inspector窗口中绘制编辑器类;
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.SOInspector`1">
            <summary>
            MB对应的模版检查器类
            </summary>
            <typeparam name="TSO"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.SOInspector`1.so">
            <summary>
            SO模版类型的对象
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SOInspector`1.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SOInspector`1.HandleObsoleteAttribute">
            <summary>
            处理<see cref="T:System.ObsoleteAttribute"/>
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SOInspector`1.OnInspectorGUI">
            <summary>
            当绘制检查器GUI
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.BaseScriptEventInspector`4">
            <summary>
            基础脚本事件检查器
            </summary>
            <typeparam name="TScriptEvent">脚本事件</typeparam>
            <typeparam name="TEnum">枚举</typeparam>
            <typeparam name="TEnumFunction">枚举函数</typeparam>
            <typeparam name="TEnumFunctionCollection">枚举函数集合</typeparam>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseScriptEventInspector`4.OnEnable">
            <summary>
            启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseScriptEventInspector`4.OnDisable">
            <summary>
            失效时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.BaseScriptEventInspector`4.OnVariableValueChanged(XCSJ.Scripts.Variable)">
            <summary>
            当变量值变化后回调
            </summary>
            <param name="variable"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension">
            <summary>
            分类列表扩展类
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.iconSize">
            <summary>
            图标大小
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.helpButtonSize">
            <summary>
            帮助图标大小
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.obsoleteSize">
            <summary>
            过期图标大小
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.controlWidth">
            <summary>
            控制宽度
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawVerticalWithScrollBar(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制带滚动条的分类列表
            </summary>
            <param name="categoryList"></param>
            <param name="scrollBarPosition"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawVertical(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.GUILayoutOption[])">
            <summary>
            垂直布局
            </summary>
            <param name="categoryList"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawHorizontalWithScrollBar(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制带滚动条的分类列表
            </summary>
            <param name="categoryList"></param>
            <param name="scrollBarPosition"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawHorizontal(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.GUILayoutOption[])">
            <summary>
            水平布局
            </summary>
            <param name="categoryList"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawList(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,System.Action{System.Collections.Generic.List{XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem},System.Int32,UnityEngine.GUIStyle,UnityEngine.GUIStyle},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制分类列表
            </summary>
            <param name="categoryList"></param>
            <param name="drawItems"></param>
            <param name="options"></param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.MinLeftWidth">
            <summary>
            左侧最小值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.MinRightWidth">
            <summary>
            右侧最小值
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawLeftRightWithScrollbar(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.GUILayoutOption[])">
            <summary>
            左右模式:带滚动条
            </summary>
            <param name="categoryList"></param>
            <param name="leftScrollbarPosition"></param>
            <param name="rightScrollbarPosition"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawLeftRight(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,UnityEngine.GUILayoutOption[])">
            <summary>
            左右模式
            </summary>
            <param name="categoryList"></param>
            <param name="options"></param>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.onBeforeDrawItem">
            <summary>
            当绘制项之前回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryListExtension.DrawIconButton(XCSJ.EditorCommonUtils.Base.CategoryViews.IItem,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            图标模式 ： 仅仅绘制项的图标和过期图标
            </summary>
            <param name="item"></param>
            <param name="style"></param>
            <param name="options"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.IItemClick">
            <summary>
            工具项点击
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItemClick.CanClick(XCSJ.EditorCommonUtils.Base.CategoryViews.IItem)">
            <summary>
            能否点击
            </summary>
            <param name="toolItem"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItemClick.OnClick(XCSJ.EditorCommonUtils.Base.CategoryViews.IItem)">
            <summary>
            点击
            </summary>
            <param name="toolItem"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem">
            <summary>
            项基类
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.indexAttribute">
            <summary>
            索引特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.memberInfo">
            <summary>
            成员信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.content">
            <summary>
            成员信息内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.obsoleteAttribute">
            <summary>
            过期特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.obsoleteMemberInfo">
            <summary>
            过期特性所属的成员信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.#ctor(XCSJ.Attributes.IndexAttribute,System.Reflection.MemberInfo)">
            <summary>
            构造函数
            </summary>
            <param name="indexAttribute"></param>
            <param name="memberInfo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.Init(XCSJ.Attributes.IndexAttribute,System.Reflection.MemberInfo)">
            <summary>
            初始化换算
            </summary>
            <param name="indexAttribute"></param>
            <param name="memberInfo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.HasAccess">
            <summary>
            有无使用权限
            </summary>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem._labelContent">
            <summary>
            文本GUI内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.labelContent">
            <summary>
            文本GUI内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.imageContent">
            <summary>
            图片GUI内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.obsoleteContent">
            <summary>
            过期GUI内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.purposes">
            <summary>
            目标
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.ContainText(System.String,System.StringComparison)">
            <summary>
            是否包含文本
            </summary>
            <param name="text"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnBeforeDrawItem(UnityEngine.Rect)">
            <summary>
            前绘制
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnAfterDrawItem(UnityEngine.Rect)">
            <summary>
            后绘制
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnMouseDown(UnityEngine.Vector2)">
            <summary>
            鼠标按下
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnMouseDrag(UnityEngine.Vector2)">
            <summary>
            鼠标拖拽
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnMouseUp(UnityEngine.Vector2)">
            <summary>
            鼠标弹起
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.CanClick">
            <summary>
            能否点击
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnClick">
            <summary>
            点击
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem.OnHelp">
            <summary>
            帮助
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.Category">
            <summary>
            分类
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.expand">
            <summary>
            展开
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.items">
            <summary>
            原始项列表
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.visualItems">
            <summary>
            绘制项
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.valid">
            <summary>
            有效
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.drawEnableItemCount">
            <summary>
            可绘制项数目
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.realDrawItemCount">
            <summary>
            真实绘制项个数（被关键字过滤后）
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.#ctor(System.String,System.Int32)">
            <summary>
            分类
            </summary>
            <param name="name"></param>
            <param name="index"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.#ctor(XCSJ.EditorCommonUtils.Base.CategoryViews.Category)">
            <summary>
            克隆分类项
            </summary>
            <param name="category"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.Add(XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem)">
            <summary>
            添加
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.Sort(System.Comparison{XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem})">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.DefaultItemComparison(XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem)">
            <summary>
            缺省项排序规则
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.UpdateVisualItem(XCSJ.EditorCommonUtils.EObsoleteDisplayRule,System.String,System.Boolean)">
            <summary>
            过期规则和搜索文本过滤
            </summary>
            <param name="obsoleteDisplayRule"></param>
            <param name="keyword"></param>
            <param name="drawCanClickOnly"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.Category.FindCategoryItem(XCSJ.EditorCommonUtils.EObsoleteDisplayRule,System.Func{XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem,System.Boolean})">
            <summary>
            获取渲染项
            </summary>
            <param name="obsoleteDisplayRule"></param>
            <param name="valid">外部有效性条件</param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryExtension">
            <summary>
            分类扩展
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryExtension.GetItemCountTextWidth(XCSJ.EditorCommonUtils.Base.CategoryViews.Category)">
            <summary>
            获取项数量文本宽度
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryExtension.GetItemCountText(XCSJ.EditorCommonUtils.Base.CategoryViews.Category)">
            <summary>
            显示项数量文本
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList">
            <summary>
            分类列表 : 管理着分类对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.data">
            <summary>
            分类列表数据
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.categoryCount">
            <summary>
            分类数量
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.visualCategoryCount">
            <summary>
            可视分类数量
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.itemCount">
            <summary>
            项总数
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.visualItemCount">
            <summary>
            可见项数量
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.UpdateDrawItem(XCSJ.EditorCommonUtils.EObsoleteDisplayRule,System.String,System.Boolean)">
            <summary>
            更新绘制项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.Init(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList)">
            <summary>
            初始化
            </summary>
            <param name="categoryList"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.selectedCategory">
            <summary>
            选择分类项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.SetSelectedCategory(System.String)">
            <summary>
            设置当前选择分类
            </summary>
            <param name="name">分类名</param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.expand">
            <summary>
            折叠
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.Exist(System.String,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem)">
            <summary>
            存在对应分类项
            </summary>
            <param name="categoryName"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CopyFrom(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList)">
            <summary>
            添加分类列表
            </summary>
            <param name="categoryList"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.AddItem(System.String,System.Int32,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem)">
            <summary>
            添加项
            </summary>
            <param name="categoryName"></param>
            <param name="item"></param>
            <param name="categoryIndex"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.Sort(System.Comparison{XCSJ.EditorCommonUtils.Base.CategoryViews.Category},System.Comparison{XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem})">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CategoryComparison">
            <summary>
            分类比较函数
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.ItemComparison">
            <summary>
            项比较函数
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.DefaultCategoryComparison(XCSJ.EditorCommonUtils.Base.CategoryViews.Category,XCSJ.EditorCommonUtils.Base.CategoryViews.Category)">
            <summary>
            缺省分类排序规则
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.GetCategoryNameList">
            <summary>
            获取分类名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.RemovePurposes(System.String[])">
            <summary>
            移除对应目的项
            </summary>
            <param name="purposes"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.Clear">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.Clone(System.Func{XCSJ.EditorCommonUtils.Base.CategoryViews.Category,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem,System.Boolean})">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CloneWithCategoryNames(System.String[])">
            <summary>
            克隆分类名称匹配的分类项列表
            </summary>
            <param name="categoryNames"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CloneWithCategoryNames(System.Func{XCSJ.EditorCommonUtils.Base.CategoryViews.Category,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem,System.Boolean},System.String[])">
            <summary>
            克隆符合传入判断条件委托和分类名称匹配的分类项列表
            </summary>
            <param name="contain"></param>
            <param name="categoryNames"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CloneWithPurposes(System.String[])">
            <summary>
            克隆用途字符串匹配的分类项列表
            </summary>
            <param name="purposes"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.CloneWithPurposes(System.Func{XCSJ.EditorCommonUtils.Base.CategoryViews.Category,XCSJ.EditorCommonUtils.Base.CategoryViews.BaseItem,System.Boolean},System.String[])">
            <summary>
            克隆符合传入判断条件委托和分类用途匹配的分类项列表
            </summary>
            <param name="contain"></param>
            <param name="purposes"></param>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList.splitter">
            <summary>
            正在使用滚动值
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem">
            <summary>
            项接口 ：用于绘制分类视图 
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.memberInfo">
            <summary>
            关联的成员信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.labelContent">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.imageContent">
            <summary>
            图片内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.obsoleteContent">
            <summary>
            图片内容
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.purposes">
            <summary>
            目的
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.obsoleteAttribute">
            <summary>
            过期特性
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.ContainText(System.String,System.StringComparison)">
            <summary>
            包含文本
            </summary>
            <param name="text"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnBeforeDrawItem(UnityEngine.Rect)">
            <summary>
            前绘制
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnAfterDrawItem(UnityEngine.Rect)">
            <summary>
            后绘制
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnMouseDown(UnityEngine.Vector2)">
            <summary>
            鼠标按下
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnMouseDrag(UnityEngine.Vector2)">
            <summary>
            鼠标拖拽
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnMouseUp(UnityEngine.Vector2)">
            <summary>
            鼠标弹起
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.CanClick">
            <summary>
            可点击
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnClick">
            <summary>
            点击
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.IItem.OnHelp">
            <summary>
            帮助
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout">
            <summary>
            分类布局
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout.Vertical">
            <summary>
            纵向
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout.Horizontal">
            <summary>
            横向
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout.LeftRight">
            <summary>
            左右
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo">
            <summary>
            分类视图标题头信息接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo.categoryLayout">
            <summary>
            布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo.drawCanClickOnly">
            <summary>
            仅绘制可点击项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo.OnHelp">
            <summary>
            帮助
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView">
            <summary>
            分类视图 ： 绘制分类列表的GUI
            绘制带头部的分类列表，头部包括搜索、折叠、布局模式
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView._categoryList">
            <summary>
            分类数据
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.categoryList">
            <summary>
            分类数据
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView._categoryViewHeaderInfo">
            <summary>
            分类视图头部信息接口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.scrollbarPosition">
            <summary>
            分类列表滚动条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.rightScrollbarPosition">
            <summary>
            左右模式下-右侧分类滚动条
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawWithScrollBar(System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制GUI带滚动视图
            </summary>
            <param name="useToolbarStyle"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawBodyWithScrollBar(UnityEngine.GUILayoutOption[])">
            <summary>
            绘制分类内容:带滚动条
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.Draw(System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制
            </summary>
            <param name="useToolbarStyle"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawBody(UnityEngine.GUILayoutOption[])">
            <summary>
            绘制分类内容:带滚动条
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.InitData(XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryList,XCSJ.EditorCommonUtils.Base.CategoryViews.ICategoryViewHeaderInfo)">
            <summary>
            设置数据
            </summary>
            <param name="categoryList"></param>
            <param name="categoryViewHeaderInfo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.GetHeaderGUIStyle(System.Boolean)">
            <summary>
            回去头部风格
            </summary>
            <param name="isToolbarStyle"></param>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.infoContent">
            <summary>
            帮助 
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawHeader(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制头部
            </summary>
            <param name="horizontalStyle"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawDefalutHeaderContent">
            <summary>
            绘制缺省头内容
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.UpdateDrawItem">
            <summary>
            更新项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawSearchText">
            <summary>
            搜索栏
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawShowMode">
            <summary>
            显示模式
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawExpand">
            <summary>
            绘制折叠与展开
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.CategoryViews.CategoryView.DrawHelp">
            <summary>
            帮助按钮
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Controls.INavigationData">
            <summary>
            导航数据接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.Controls.INavigationData.navigationItems">
            <summary>
            导航数据项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.INavigationData.GetNavigationItemGUIContent(System.Object)">
            <summary>
            获取GUIContent
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.INavigationData.OnClickNavigationItem(System.Object)">
            <summary>
            点击导航项回调
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar">
            <summary>
            导航条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.firstStyle">
            <summary>
            第一项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.firstStyle_lastTextColor">
            <summary>
            第一项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.middleStyle">
            <summary>
            中间项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.lastStyle">
            <summary>
            最后一项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.lastColor">
            <summary>
            最后一项GUI颜色
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.lastTextColor">
            <summary>
            最后一项GUI颜色
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw(XCSJ.EditorCommonUtils.Base.Controls.INavigationData)">
            <summary>
            绘制导航条
            </summary>
            <param name="navigationData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw(XCSJ.EditorCommonUtils.Base.Controls.INavigationData,System.Func{System.Object,System.String},UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean)">
            <summary>
            绘制导航条
            </summary>
            <param name="navigationData"></param>
            <param name="objToName"></param>
            <param name="firstStyle"></param>
            <param name="middleStyle"></param>
            <param name="lastStyle"></param>
            <param name="lastColor"></param>
            <param name="isHorizontal"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw(XCSJ.EditorCommonUtils.Base.Controls.INavigationData,System.Func{System.Object,UnityEngine.GUIContent},UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean)">
            <summary>
            绘制导航条
            </summary>
            <param name="navigationData"></param>
            <param name="objToName"></param>
            <param name="firstStyle"></param>
            <param name="middleStyle"></param>
            <param name="lastStyle"></param>
            <param name="lastColor"></param>
            <param name="isHorizontal"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw``1(System.Collections.Generic.List{``0},System.Action{``0})">
            <summary>
            绘制导航条
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="onClick"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.DefaultObjectToName``1(``0)">
            <summary>
            对象转字符串
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw``1(System.Collections.Generic.List{``0},System.Action{``0},System.Func{``0,System.String},UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean)">
            <summary>
            绘制导航条
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="onClick"></param>
            <param name="objToName"></param>
            <param name="firstStyle"></param>
            <param name="middleStyle"></param>
            <param name="lastStyle"></param>
            <param name="lastColor"></param>
            <param name="isHorizontal"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.NavigationBar.Draw``1(System.Collections.Generic.List{``0},System.Action{``0},System.Func{``0,UnityEngine.GUIContent},UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean)">
            <summary>
            绘制导航条
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="onClick"></param>
            <param name="objToName"></param>
            <param name="firstStyle"></param>
            <param name="middleStyle"></param>
            <param name="lastStyle"></param>
            <param name="lastColor"></param>
            <param name="isHorizontal"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Controls.INavigationCmd">
            <summary>
            导航条命令接口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.INavigationCmd.Goto(System.String)">
            <summary>
            跳转到
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.INavigationCmd.CanGo(System.String)">
            <summary>
            能否跳转到
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Controls.Navigation">
            <summary>
            导航条前进后退
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.#ctor(XCSJ.EditorCommonUtils.Base.Controls.INavigationCmd)">
            <summary>
            构造
            </summary>
            <param name="navigation"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Push(System.String,System.String)">
            <summary>
            压入导航条
            </summary>
            <param name="oldNamePath"></param>
            <param name="newNamePath"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd">
            <summary>
            导航条命令
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.#ctor(XCSJ.EditorCommonUtils.Base.Controls.INavigationCmd)">
            <summary>
            构造
            </summary>
            <param name="navigation"></param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.doNamePath">
            <summary>
            做的名称路径
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.undoNamePath">
            <summary>
            撤销的名称路径
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.CanDo">
            <summary>
            能否做
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.CanUndo">
            <summary>
            能能否撤销
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.Do">
            <summary>
            做
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Controls.Navigation.Cmd.Undo">
            <summary>
            撤销
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler">
            <summary>
            编辑器处理程序
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.ClearConsole">
            <summary>
            清理控制台
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.SetScriptExecutionOrder(UnityEngine.MonoBehaviour,System.Int32)">
            <summary>
            设置脚本执行顺序
            </summary>
            <param name="behaviour"></param>
            <param name="order"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.OpenMonoScript(System.Object)">
            <summary>
            打开Mono脚本
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.InPrefabStage(UnityEngine.GameObject)">
            <summary>
            在预制件舞台上
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.OpenInspectorWindow">
            <summary>
            打开Inspector窗口
            </summary>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.lockInspectorWindow">
            <summary>
            设置或判断Inspector窗口是否锁定
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.OpenPreferencesWindow(System.String)">
            <summary>
            打开首选项窗口
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.CompileMacroExists(System.String)">
            <summary>
            检测编译宏是否存在
            </summary>
            <param name="macro"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GUIIsExiting">
            <summary>
            判断GUI是否正在退出中
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetPathOfSkinMarker(System.String)">
            <summary>
            获取带皮肤标识的路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetIconInLib(System.String,UnityEngine.Vector2Int,XCSJ.Attributes.ESkinRule)">
            <summary>
            从库中获取图标
            </summary>
            <param name="name"></param>
            <param name="size"></param>
            <param name="skinRule"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetGradient(UnityEditor.SerializedProperty)">
            <summary>
            获取序列化属性中获取Gradient值
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.SetGradient(UnityEditor.SerializedProperty,UnityEngine.Gradient)">
            <summary>
            设置序列化属性中获取Gradient值
            </summary>
            <param name="serializedProperty"></param>
            <param name="gradient"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetInputNames">
            <summary>
            获取输入名称列表；对应Unity的InputManager中的输入名称；
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawArrow(UnityEngine.Color,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
            <summary>
            绘制箭头
            </summary>
            <param name="color"></param>
            <param name="direction"></param>
            <param name="center"></param>
            <param name="arrowSize"></param>
            <param name="outlineWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.CreatePrefab(System.String,UnityEngine.GameObject)">
            <summary>
            创建预制件
            </summary>
            <param name="path"></param>
            <param name="go"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.HasCustomPropetyDrawer(UnityEditor.SerializedProperty)">
            <summary>
            有无自定义属性绘制器
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DeleteArrayElement(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            删除数组元素
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="elementSerializedProperty"></param>
            <param name="index"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawVarStringPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制变量字符串弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawBothHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制获取与设置层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawGetHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制获取层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawSetHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制设置层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawVarStringPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制变量字符串弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawBothHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制获取与设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawGetHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制获取层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawSetHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetToolCategoryListByPurposes(System.String[])">
            <summary>
            获取工具目录列表通过用途
            </summary>
            <param name="purposes"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetFieldInfoFromPropertyPath(System.Type,System.String,System.Type@)">
            <summary>
            从属性路径获取字段信息
            </summary>
            <param name="host"></param>
            <param name="propertyPath"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetFieldInfoFromProperty(UnityEditor.SerializedProperty,System.Type@)">
            <summary>
            从属性获取字段信息
            </summary>
            <param name="serializedProperty"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.IsReorderableArray(XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            是可排序数组
            </summary>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.HasPropertyDrawer(UnityEditor.SerializedProperty)">
            <summary>
            有属性绘制器
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetDrawerTypeForType(System.Type)">
            <summary>
            获取类型的绘制类型
            </summary>
            <param name="type">类型：<see cref="T:UnityEditor.CustomPropertyDrawer"/>构造函数的传入的参数类型</param>
            <returns>被<see cref="T:UnityEditor.CustomPropertyDrawer"/>修饰且继承自<see cref="T:UnityEditor.GUIDrawer"/>的类型</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetUnityEditorLanguage">
            <summary>
            获取Unity编辑器语言
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.CanDirectDrawPropertyAsArrayElementInReorderableList(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            在可排序列表中作为数组元素时能否直接绘制属性
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawGenericMember(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            绘制通用成员
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawArrayHandle(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            绘制数组处理
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawGenericMemberHead(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            绘制通用成员头部
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.GetSerializedPropertyValue(UnityEditor.SerializedProperty)">
            <summary>
            获取序列化属性值
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.SetSerializedPropertyValue(UnityEditor.SerializedProperty,System.Object)">
            <summary>
            设置序列化属性值
            </summary>
            <param name="serializedProperty"></param>
            <param name="value"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IEditorHandler.DrawVarStringWindowContent(XCSJ.EditorCommonUtils.VarStringEditorWindow)">
            <summary>
            绘制变量字符串窗口内容
            </summary>
            <param name="varStringEditorWindow"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Kernel.ISceneView">
            <summary>
            场景视图接口
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler">
            <summary>
            撤销处理器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.RecordRename(UnityEngine.Object[])">
            <summary>
            记录重命名
            </summary>
            <param name="objectsToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.RegisterCreatedObjectUndo(UnityEngine.Object)">
            <summary>
            注册创建对象对象
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.DestroyObjectImmediate(UnityEngine.Object)">
            <summary>
            销毁对象
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.RegisterCompleteObjectUndo(UnityEngine.Object[])">
            <summary>
            注册完整对象
            </summary>
            <param name="objectsToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.RecordSetTransformParent(UnityEngine.Transform,UnityEngine.Transform)">
            <summary>
            设置父变换
            </summary>
            <param name="child"></param>
            <param name="parent"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.RegisterObjectReferenceInScene(UnityEngine.Object)">
            <summary>
            查找当前激活场景中所有引用objectToUndo的对象引用，将所有的对象引用做完整注册；
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.DestroyObjectWithRegisterObjectReferenceInScene(UnityEngine.Object)">
            <summary>
            查找当前激活场景中所有引用objectToUndo的对象引用，将所有的对象引用做完整注册，之后删除objectToUndo对象；
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.DestroyModelWithRegisterObjectReferenceInScene(XCSJ.PluginCommonUtils.ComponentModel.Model)">
            <summary>
            查找当前激活场景中所有引用modelToUndo的对象引用，将所有的对象引用做完整注册，之后删除modelToUndo对象；
            </summary>
            <param name="modelToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IUndoHandler.DestroyModelsWithRegisterObjectReferenceInScene(System.Collections.Generic.IEnumerable{XCSJ.PluginCommonUtils.ComponentModel.Model})">
            <summary>
            批量查找当前激活场景中所有引用modelsToUndo的对象引用，将所有的对象引用做完整注册，之后删除modelsToUndo对象；
            </summary>
            <param name="modelsToUndo"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Kernel.IViewHandler">
            <summary>
            视图处理接口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.IViewHandler.Create(System.String,UnityEngine.Transform,System.Type[])">
            <summary>
            创建游戏对象
            </summary>
            <param name="name">游戏对象</param>
            <param name="parent">父节点</param>
            <param name="componentTypes">组件类型</param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler">
            <summary>
            编辑器处理程序
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.editorHandler">
            <summary>
            编辑器处理对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.undoHandler">
            <summary>
            撤销处理对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.viewHandler">
            <summary>
            视图处理对象
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.ClearConsole">
            <summary>
            清理控制台
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.SetScriptExecutionOrder(UnityEngine.MonoBehaviour,System.Int32)">
            <summary>
            设置脚本执行顺序
            </summary>
            <param name="behaviour"></param>
            <param name="order"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.OpenMonoScript(System.Object)">
            <summary>
            打开Mono脚本
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.InPrefabStage(UnityEngine.GameObject)">
            <summary>
            在预制件舞台上
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.OpenInspectorWindow">
            <summary>
            打开Inspector窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.IsLockInspectorWindow">
            <summary>
            检测Inspector窗口是否锁定
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.LockInspectorWindow(System.Boolean)">
            <summary>
            锁定Inspector窗口
            </summary>
            <param name="lockWindow"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.OpenPreferencesWindow(System.String)">
            <summary>
            打开首选项窗口
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.CompileMacroExists(System.String)">
            <summary>
            检测编译宏是否存在
            </summary>
            <param name="macro"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GUIIsExiting">
            <summary>
            判断GUI是否正在退出中
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetPathOfSkinMarker(System.String)">
            <summary>
            获取带皮肤标识的路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetIconInLib(System.String,UnityEngine.Vector2Int,XCSJ.Attributes.ESkinRule)">
            <summary>
            从库中获取图标
            </summary>
            <param name="name"></param>
            <param name="size"></param>
            <param name="skinRule"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetGradient(UnityEditor.SerializedProperty)">
            <summary>
            获取序列化属性中Gradient值
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.SetGradient(UnityEditor.SerializedProperty,UnityEngine.Gradient)">
            <summary>
            设置序列化属性中Gradient值
            </summary>
            <param name="serializedProperty"></param>
            <param name="gradient"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetInputNames">
            <summary>
            获取输入名称列表；对应Unity的InputManager中的输入名称；
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawArrow(UnityEngine.Color,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
            <summary>
            绘制箭头
            </summary>
            <param name="color"></param>
            <param name="direction"></param>
            <param name="center"></param>
            <param name="arrowSize"></param>
            <param name="outlineWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.CreatePrefab(System.String,UnityEngine.GameObject)">
            <summary>
            创建预制件
            </summary>
            <param name="path"></param>
            <param name="go"></param>
            <returns></returns>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.onSceneGUI">
            <summary>
            当绘制场景GUI时调用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.OnSceneGUI(XCSJ.EditorCommonUtils.Base.Kernel.ISceneView)">
            <summary>
            当绘制场景GUI时调用
            </summary>
            <param name="sceneView"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.HasCustomPropetyDrawer(UnityEditor.SerializedProperty)">
            <summary>
            有无自定义属性绘制器
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.Create(System.String,UnityEngine.Transform,System.Type[])">
            <summary>
            创建游戏对象
            </summary>
            <param name="name">游戏对象</param>
            <param name="parent">父节点</param>
            <param name="componentTypes">组件类型</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DeleteArrayElement(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            删除数组元素
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="elementSerializedProperty"></param>
            <param name="index"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawVarStringPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制变量字符串弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawBothHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制获取与设置层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawGetHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制获取层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawSetHierarchyKeyExtensionPopup(System.String,System.Action{System.String},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制设置层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawVarStringPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制变量字符串弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawBothHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制获取与设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawGetHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制获取层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawSetHierarchyKeyExtensionPopup(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetToolCategoryListByPurposes(System.String[])">
            <summary>
            获取工具目录列表通过用途
            </summary>
            <param name="purposes"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetFieldInfoFromPropertyPath(System.Type,System.String,System.Type@)">
            <summary>
            从属性路径获取字段信息
            </summary>
            <param name="host"></param>
            <param name="propertyPath"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetFieldInfoFromProperty(UnityEditor.SerializedProperty,System.Type@)">
            <summary>
            从属性获取字段信息
            </summary>
            <param name="serializedProperty"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.IsReorderableArray(XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            是可排序数组
            </summary>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.HasPropertyDrawer(UnityEditor.SerializedProperty)">
            <summary>
            有属性绘制器
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetDrawerTypeForType(System.Type)">
            <summary>
            获取类型的绘制类型
            </summary>
            <param name="type">类型：<see cref="T:UnityEditor.CustomPropertyDrawer"/>构造函数的传入的参数类型</param>
            <returns>被<see cref="T:UnityEditor.CustomPropertyDrawer"/>修饰且继承自<see cref="T:UnityEditor.GUIDrawer"/>的类型</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.GetUnityEditorLanguage">
            <summary>
            获取Unity编辑器语言
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.CanDirectDrawPropertyAsArrayElementInReorderableList(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            在可排序列表中作为数组元素时能否直接绘制属性
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawGenericMember(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            绘制通用成员
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawGenericMemberHead(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData,UnityEngine.GUIContent,System.Action)">
            <summary>
            绘制通用成员
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawArrayHandle(XCSJ.EditorCommonUtils.BaseInspector,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            绘制数组处理
            </summary>
            <param name="inspector"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Base.Kernel.EditorHandler.DrawVarStringWindowContent(XCSJ.EditorCommonUtils.VarStringEditorWindow)">
            <summary>
            绘制变量字符串窗口内容
            </summary>
            <param name="varStringEditorWindow"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EFolder">
            <summary>
            文件夹枚举
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder._Self">
            <summary>
            指向Assets/XDreamer文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Editor">
            <summary>
            指向Assets/XDreamer/Editor文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.EditorResources">
            <summary>
            指向Assets/XDreamer/EditorResources文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Gizmos">
            <summary>
            指向Assets/XDreamer/Gizmos文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Plugins">
            <summary>
            指向Assets/XDreamer/Plugins文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.SCAD">
            <summary>
            指向Assets/XDreamer/SCAD文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Scripts">
            <summary>
            指向Assets/XDreamer/Scripts文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.ThirdParty">
            <summary>
            指向Assets/XDreamer/ThirdParty文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Localization">
            <summary>
            本地化：用于解决编辑器中文本信息的本地化问题；指向Assets/XDreamer/Localization文件件
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder._Assets">
            <summary>
            指向Assets/XDreamer-Assets文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder._Examples">
            <summary>
            指向Assets/XDreamer-Examples文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder._ThirdPartyUnityPackage">
            <summary>
            指向Assets/XDreamer-ThirdPartyUnityPackage文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder._Software">
            <summary>
            指向Assets/XDreamer-Software文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.EditorResources_Common">
            <summary>
            指向Assets/XDreamer/EditorResources/Common文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.EditorResources_Common_Icon">
            <summary>
            指向Assets/XDreamer/EditorResources/Common/Icon文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.EditorResources_IconLib">
            <summary>
            指向Assets/XDreamer/EditorResources/IconLib文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Scripts_Editor">
            <summary>
            指向Assets/XDreamer/Scripts/Editor文件夹
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EFolder.Scripts_Plugins">
            <summary>
            指向Assets/XDreamer/Scripts/Plugins文件夹
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper">
            <summary>
            编辑器多语言组手
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper.GetLanguageFileFullPath(UnityEngine.SystemLanguage)">
            <summary>
            获取语言文件全路径
            </summary>
            <param name="systemLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper.GetLanguageFileFullPath(System.String)">
            <summary>
            获取语言文件全路径
            </summary>
            <param name="systemLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper.GetLanguageFileAssetsPath(UnityEngine.SystemLanguage)">
            <summary>
            获取语言文件资产路径
            </summary>
            <param name="systemLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorMultiLanguageHelper.GetLanguageFileAssetsPath(System.String)">
            <summary>
            获取语言文件资产路径
            </summary>
            <param name="systemLanguage"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ILanguageCache">
            <summary>
            语言缓存接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ILanguageCache.languageCache">
            <summary>
            语言缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ILanguageCache.OnLanguageCacheChanged">
            <summary>
            当语言缓存变更后回调
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.LanguageCache">
            <summary>
            语言缓存
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.LanguageCache.datas">
            <summary>
            国际化到本地化(I到L)的数据
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LanguageCache.target">
            <summary>
            目标
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LanguageCache.dynamicLabel">
            <summary>
            动态标签接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LanguageCache.targetType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LanguageCache.onChanged">
            <summary>
            当已变化事件：缓存信息发生变换后回调的事件
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnEnable``1(``0)">
            <summary>
            启用
            </summary>
            <typeparam name="T">目标实例</typeparam>
            <param name="target"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnEnable(UnityEngine.Object,System.Action)">
            <summary>
            启用
            </summary>
            <param name="target"></param>
            <param name="onChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnEnable(System.Type,System.Action)">
            <summary>
            启用
            </summary>
            <param name="targetType">目标类型</param>
            <param name="onChanged">当语言已变换后回调事件</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnEnable(UnityEngine.Object,System.Type,System.Action)">
            <summary>
            启用
            </summary>
            <param name="target"></param>
            <param name="targetType"></param>
            <param name="onChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnEnableInternal(UnityEngine.Object,System.Type,System.Action)">
            <summary>
            启用
            </summary>
            <param name="target"></param>
            <param name="targetType"></param>
            <param name="onChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.Clear">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.OnLanguageChanged">
            <summary>
            当语言变更
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.Tr(System.String,System.Type)">
            <summary>
            翻译
            </summary>
            <param name="key"></param>
            <param name="defaultType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LanguageCache.Tr(System.String,System.String)">
            <summary>
            翻译
            </summary>
            <param name="key"></param>
            <param name="defaultGroupName"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.LabelData">
            <summary>
            标签数据：与<see cref="T:UnityEngine.GUIContent"/>绘制关联的标签数据信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LabelData.label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.LabelData.trLabel">
            <summary>
            翻译标签
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelData.UpdateTrLabel(XCSJ.EditorCommonUtils.LanguageCache)">
            <summary>
            更新翻译标签
            </summary>
            <param name="languageCache"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.LabelCache">
            <summary>
            标签缓存
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.LabelCache.labels">
            <summary>
            标签
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelCache.Clear">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelCache.GetPropertyData(System.String)">
            <summary>
            获取属性数据
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelCache.GetPropertyData(UnityEditor.SerializedProperty)">
            <summary>
            获取属性数据                                                                                                                                                             
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelCache.TrLabel(UnityEditor.SerializedProperty)">
            <summary>
            翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LabelCache.TrLabel(System.String)">
            <summary>
            翻译标签
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PropertyCache`1">
            <summary>
            属性缓存
            </summary>
            <typeparam name="TPropertyData">属性数据泛型类</typeparam>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.OnLanguageChanged">
            <summary>
            当语言变更
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyCache`1.propertyDatas">
            <summary>
            属性数据
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.GetPropertyData(System.String)">
            <summary>
            获取属性数据
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.GetPropertyData(UnityEditor.SerializedProperty)">
            <summary>
            获取属性数据
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.TrLabel(UnityEditor.SerializedProperty)">
            <summary>
            翻译标签
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache`1.TrLabel(System.String)">
            <summary>
            翻译标签
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PropertyCache">
            <summary>
            属性缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.GetPropertyData(System.String)">
            <summary>
            获取属性数据
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.GetPropertyData(UnityEditor.SerializedProperty)">
            <summary>
            获取属性数据
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.TrLabel(System.String,XCSJ.PluginCommonUtils.ENameTip)">
            <summary>
            翻译标签
            </summary>
            <param name="propertyPath"></param>
            <param name="nameTip"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.BeginDrawMember(UnityEngine.Object,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            开始绘制成员：主要用于开始处理组、有效性、只读、隐藏等特性；
            </summary>
            <param name="target"></param>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.EndDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            结束绘制成员：主要用于结束处理组、有效性、只读、隐藏等特性；
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.FinalEndDrawMember">
            <summary>
            最终结束绘制成员：用于完成绘制堆栈的清理工作；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyCache.drawMember">
            <summary>
            绘制成员
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyCache.groupStack">
            <summary>
            组堆栈
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.BeginGroupLayout(XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            开始组布局
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyCache.EndGroupLayout">
            <summary>
            结束组布局
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PropertyData">
            <summary>
            属性数据：与<see cref="T:UnityEditor.SerializedProperty"/>关联的字段成员数据信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.Init">
            <summary>
            初始化：会清空全局缓存的静态对象
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyData.caches">
            <summary>
            缓存
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyData.inCacheSearching">
            <summary>
            正在缓存搜索中
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.GetPropertyData(UnityEditor.SerializedProperty)">
            <summary>
            获取属性数据，基于全局缓存的对象
            </summary>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.GetPropertyData(System.Type,System.String)">
            <summary>
            获取属性数据，基于全局缓存的对象
            </summary>
            <param name="targetType"></param>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.localTr">
            <summary>
            本地翻译
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyData.contents">
            <summary>
            内容缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.TrLabel(XCSJ.PluginCommonUtils.ENameTip)">
            <summary>
            翻译标签
            </summary>
            <param name="nameTip"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.UpdateTrLabel(XCSJ.EditorCommonUtils.LanguageCache)">
            <summary>
            更新翻译标签
            </summary>
            <param name="languageCache"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.GetTrLabel(UnityEngine.GUIContent)">
            <summary>
            获取翻译标签
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.mainMemberInfo">
            <summary>
            主成员信息：根据属性路径的不同，可能是目标类型<see cref="P:XCSJ.EditorCommonUtils.PropertyData.targetType"/>或字段信息<see cref="P:XCSJ.EditorCommonUtils.PropertyData.fieldInfo"/>
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.targetType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.propertyPath">
            <summary>
            属性路径
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.validSerializedProperty">
            <summary>
            有效的序列化属性：即属性路径存在对应有效的序列化属性对象；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.createFromSerializedProperty">
            <summary>
            创建来源与序列化属性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.serializedProperty">
            <summary>
            序列化属性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.propertyCache">
            <summary>
            属性缓存
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.parentPropertyPath">
            <summary>
            父级属性路径
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.parentPropertyData">
            <summary>
            父级属性数据
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.hierarchyPropertyDatas">
            <summary>
            层级属性路径列表
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.depth">
            <summary>
            深度
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.fieldInfo">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.hasPropertyDrawer">
            <summary>
            有属性绘制器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.directDrawProperty">
            <summary>
            直接绘制属性：有属性绘制器(即<see cref="P:XCSJ.EditorCommonUtils.PropertyData.hasPropertyDrawer"/>为真)或不是<see cref="F:UnityEditor.SerializedPropertyType.Generic"/>类型的属性时，本值为真；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.#ctor(System.Type,System.String,XCSJ.EditorCommonUtils.PropertyCache)">
            <summary>
            构造
            </summary>
            <param name="targetType"></param>
            <param name="propertyPath"></param>
            <param name="propertyCache"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.#ctor(System.Type,UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyCache)">
            <summary>
            构造
            </summary>
            <param name="targetType"></param>
            <param name="serializedProperty"></param>
            <param name="propertyCache"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.#ctor(XCSJ.EditorCommonUtils.PropertyData,XCSJ.EditorCommonUtils.PropertyCache)">
            <summary>
            构造
            </summary>
            <param name="propertyData"></param>
            <param name="propertyCache"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.groupAttribute">
            <summary>
            组特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.endGroupAttribute">
            <summary>
            结束组特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.isExpanded">
            <summary>
            组是否展开
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.userDefineTexture">
            <summary>
            用户自定义纹理
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.textColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.expandTextColor">
            <summary>
            展开时文本颜色
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.groupLabel">
            <summary>
            组标签
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.groupTrLabel">
            <summary>
            组翻译标枪
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.DrawGroupFoldout">
            <summary>
            绘制组折叠页
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.BeginGroupLayout">
            <summary>
            开始组布局
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.EndGroupLayout">
            <summary>
            结束组布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.hideInSuperInspectorAttribute">
            <summary>
            超级检查器中隐藏特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.needCheckHideInSuperInspectorAttribute">
            <summary>
            需要检查超级检查器中隐藏特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.hideAlways">
            <summary>
            总是隐藏
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.BeginHide(UnityEngine.Object)">
            <summary>
            开始隐藏
            </summary>
            <param name="rootObject"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.EndHide">
            <summary>
            结束隐藏
            </summary>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.validityCheckAttribute">
            <summary>
            有效性检查特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.needValidityCheck">
            <summary>
            需要有效性检查
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.valid">
            <summary>
            有效
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.displayInvalidExplanation">
            <summary>
            显示无效解释
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.invalidExplanationLabel">
            <summary>
            无效解释标签
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.invalidExplanationTrLabel">
            <summary>
            无效解释翻译标签
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.BeginValidityCheck(UnityEngine.Object,UnityEditor.SerializedProperty)">
            <summary>
            开始有效性检查
            </summary>
            <param name="rootObject"></param>
            <param name="serializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyData.EndValidityCheck(System.Boolean)">
            <summary>
            结束有效性检查
            </summary>
            <param name="drawMember"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.readonlyAttribute">
            <summary>
            只读特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.isReadonly">
            <summary>
            是只读的
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.onlyMemberElementsAttribute">
            <summary>
            仅成员元素特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.onlyMemberElements">
            <summary>
            仅成员元素
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.needIndent">
            <summary>
            需要缩进
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.needBoundBox">
            <summary>
            需要包围盒
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.isArray">
            <summary>
            是数组（列表）
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.isReorderableArray">
            <summary>
            是可排序数组
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.reorderableList">
            <summary>
            可重排序列表
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElement_CanDirectDrawProperty">
            <summary>
            数组元素可直接绘制属性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrarySizePropertyData">
            <summary>
            数组大小属性数据：当前是数组（列表）时有效
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayAttribute">
            <summary>
            数组特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.needArrayHandle">
            <summary>
            需要数组处理
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayPropertyPath">
            <summary>
            数组属性路径:当前属性数据所属的数组（列表）属性路径
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayPropertyData">
            <summary>
            数组属性数据：在当前对象指向数组大小（<see cref="F:UnityEditor.SerializedPropertyType.ArraySize"/>）型序列化属性或具体数组元素对象时，本字段信息有效；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.isArrayElement">
            <summary>
            是数组元素：如果为真，则<see cref="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementIndex"/>值必定大于等于0
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementIndex">
            <summary>
            数组元素索引：以0开始的程序索引；如不是数组元素时，本值为-1；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementType">
            <summary>
            数组元素类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementType_PropertyDrawerType">
            <summary>
            数组元素类型的属性绘制器类型：即获取<see cref="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementType"/>的自定义绘制类型；不考虑数组（列表）上的修饰特性；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElement_GenericDefaultDraw">
            <summary>
            通用默认绘制的数组元素：当是数组元素（<see cref="P:XCSJ.EditorCommonUtils.PropertyData.isArrayElement"/>为真）、数组元素的序列化属性类型为<see cref="F:UnityEditor.SerializedPropertyType.Generic"/>、数组元素类型的属性绘制器类型<see cref="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementType_PropertyDrawerType"/>为空（即使用默认绘制）成立时，本参数值为真;
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.arrayElementAttribute">
            <summary>
            数组（列表）元素特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.canResize">
            <summary>
            可以调整数组大小
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.canInsert">
            <summary>
            能插入
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.canDelete">
            <summary>
            能删除
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.recoverySise">
            <summary>
            恢复大小
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.displayArraySize">
            <summary>
            显示数组大小
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.displayArraySizeAfterHead">
            <summary>
            标题之后显示数组大小
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyData.displayArraySizeNewLine">
            <summary>
            新行显示数组大小
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.TypePropertyPathFieldInfoCache">
            <summary>
            类型属性路径字段信息缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TypePropertyPathFieldInfoCache.CreateValue(System.Type,System.String)">
            <summary>
            构建值
            </summary>
            <param name="key1"></param>
            <param name="key2"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.TypePropertyPathGUIContentCache">
            <summary>
            类型属性路径GUI内容缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TypePropertyPathGUIContentCache.CreateValue(System.Type,System.String)">
            <summary>
            构建值
            </summary>
            <param name="key1"></param>
            <param name="key2"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ReferenceInfo">
            <summary>
            引用信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ReferenceInfo.gameObject">
            <summary>
            游戏对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ReferenceInfo.component">
            <summary>
            组件
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ReferenceInfo.targetObject">
            <summary>
            符合条件的序列化属性所在的目标对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ReferenceInfo.serializedProperty">
            <summary>
            符合条件的序列化属性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ReferenceInfo.hierarchyObjs">
            <summary>
            层级对象，对应遍历过程中的递归查找的层级顺序
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.#ctor(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.SerializedProperty,System.Collections.Generic.List{UnityEngine.Object})">
            <summary>
            构造
            </summary>
            <param name="gameObject">游戏对象</param>
            <param name="component">组件</param>
            <param name="serializedProperty">序列化属性</param>
            <param name="hierarchyObjs">层级对象，对应遍历过程中的递归查找的层级顺序</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.DefaultFindTypeFunc(UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Type)">
            <summary>
            默认查找类型函数
            </summary>
            <param name="gameObject">游戏对象</param>
            <param name="component">组件</param>
            <param name="object"></param>
            <param name="serializedProperty">序列化属性</param>
            <param name="type">待查找的类型</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.DefaultFindObjectReferenceFunc(UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,UnityEngine.Object)">
            <summary>
            默认查找对象引用的函数
            </summary>
            <param name="gameObject">游戏对象</param>
            <param name="component">组件</param>
            <param name="object"></param>
            <param name="serializedProperty">序列化属性</param>
            <param name="objectReference">待查找的对象引用</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.DefaultFindObjectReferenceFunc(UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Collections.Generic.IEnumerable{UnityEngine.Object})">
            <summary>
            默认查找对象引用的函数
            </summary>
            <param name="gameObject">游戏对象</param>
            <param name="component">组件</param>
            <param name="object"></param>
            <param name="serializedProperty">序列化属性</param>
            <param name="objectReferences">待查找的对象引用</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInScene(System.Type)">
            <summary>
            在场景中查找指定类型的引用
            </summary>
            <param name="type">待查找的类型</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInScene(UnityEngine.Object)">
            <summary>
            在场景中查找指定对象的引用
            </summary>
            <param name="objectReference">待查找的对象引用</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInScene(System.Collections.Generic.IEnumerable{UnityEngine.Object})">
            <summary>
            在场景中查找指定对象的引用
            </summary>
            <param name="objectReferences">待查找的对象引用</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInScene(System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在场景中查找引用
            </summary>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInGameObject(UnityEngine.GameObject,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Boolean,System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在游戏对象中查找引用
            </summary>
            <param name="gameObject">游戏对象</param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="children">标识是否遍历子级游戏对象</param>
            <param name="canEntryChildrenSerializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInGameObject(System.Collections.Generic.List{UnityEngine.Object},System.Collections.Generic.HashSet{UnityEngine.Object},System.Collections.Generic.List{XCSJ.EditorCommonUtils.ReferenceInfo},UnityEngine.GameObject,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean},System.Boolean)">
            <summary>
            在游戏对象中查找引用
            </summary>
            <param name="hierarchyObjs">层级对象，对应遍历过程中的递归查找的层级顺序</param>
            <param name="visitedObjs">已访问过的对象</param>
            <param name="referenceInfos">引用信息列表</param>
            <param name="gameObject">游戏对象</param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
            <param name="children">标识是否遍历子级游戏对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInComponent(UnityEngine.Component,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在组件中查找引用
            </summary>
            <param name="component">组件</param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInComponent(System.Collections.Generic.List{UnityEngine.Object},System.Collections.Generic.HashSet{UnityEngine.Object},System.Collections.Generic.List{XCSJ.EditorCommonUtils.ReferenceInfo},UnityEngine.Component,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在组件中查找引用
            </summary>
            <param name="hierarchyObjs">层级对象，对应遍历过程中的递归查找的层级顺序</param>
            <param name="visitedObjs">已访问过的对象</param>
            <param name="referenceInfos">引用信息列表</param>
            <param name="component">组件</param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReferenceInternal(System.Collections.Generic.List{UnityEngine.Object},System.Collections.Generic.HashSet{UnityEngine.Object},System.Collections.Generic.List{XCSJ.EditorCommonUtils.ReferenceInfo},UnityEngine.Component,UnityEngine.Object,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在Unity对象中查找引用
            </summary>
            <param name="hierarchyObjs">层级对象，对应遍历过程中的递归查找的层级顺序</param>
            <param name="visitedObjs">已访问过的对象</param>
            <param name="referenceInfos">引用信息列表</param>
            <param name="component">组件</param>
            <param name="obj"></param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ReferenceInfo.FindReference(System.Collections.Generic.List{UnityEngine.Object},System.Collections.Generic.HashSet{UnityEngine.Object},System.Collections.Generic.List{XCSJ.EditorCommonUtils.ReferenceInfo},UnityEngine.Component,UnityEngine.Object,System.Func{UnityEngine.GameObject,UnityEngine.Component,UnityEngine.Object,UnityEditor.SerializedProperty,System.Boolean},System.Func{UnityEngine.Object,System.Boolean})">
            <summary>
            在Unity对象中查找引用
            </summary>
            <param name="hierarchyObjs">层级对象，对应遍历过程中的递归查找的层级顺序</param>
            <param name="visitedObjs">已访问过的对象</param>
            <param name="referenceInfos">引用信息列表</param>
            <param name="component">组件</param>
            <param name="obj"></param>
            <param name="func">检测是否满足引用条件的函数</param>
            <param name="canEntryChildrenSerializedProperty"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CategoryOption">
            <summary>
            分类首选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.ignoreCaseWhenSearch">
            <summary>
            忽略大小写
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.displayAllMemberWhenCategoryNameMatch">
            <summary>
            显示全部成员
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.iconSize">
            <summary>
            图标尺寸
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.helpButtonSize">
            <summary>
            帮助按钮尺寸
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.toolParentExtensionName">
            <summary>
            工具父节点扩展名
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.datas">
            <summary>
            保存布局和搜索字符串
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetSearchText(System.String)">
            <summary>
            获取搜索关键字
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetSearchText(System.String,System.String)">
            <summary>
            设置搜索关键字
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetCategoryLayout(System.String)">
            <summary>
            获取分类首选项布局类型
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetCategoryLayout(System.String,XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout)">
            <summary>
            设置分类首选项布局类型
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetDrawCanClickOnly(System.String)">
            <summary>
            获取分类首选项的仅绘制可点击项属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetDrawCanClickOnly(System.String,System.Boolean)">
            <summary>
            设置分类首选项布局的仅绘制可点击项属性
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CategoryOption.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.Data.categoryLayout">
            <summary>
            分类首选项布局
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.Data.searchText">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryOption.Data.drawCanClickOnly">
            <summary>
            仅绘制可点击项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetDefaultSearchText">
            <summary>
            获取搜索关键字
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetDefaultSearchText(System.String)">
            <summary>
            设置搜索关键字
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetDefaultCategoryLayout">
            <summary>
            获取分类首选项布局类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetDefaultCategoryLayout(XCSJ.EditorCommonUtils.Base.CategoryViews.ECategoryLayout)">
            <summary>
            设置分类首选项布局类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.GetDefaultDrawCanClickOnly">
            <summary>
            获取分类首选项布局类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOption.SetDefaultDrawCanClickOnly(System.Boolean)">
            <summary>
            设置分类首选项布局类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CategoryOptionEditor">
            <summary>
            分类首先项绘制
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryOptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            OnGUI绘制 ： 屏蔽data绘制
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CommonEditorHelper">
            <summary>
            通用编辑器助手类
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditorHelper.FindCommonEditorType(System.Object)">
            <summary>
            查找通用编辑器类型
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditorHelper.FindCommonEditorTypeByType(System.Type)">
            <summary>
            通过类型查找通用编辑器类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditorHelper.Get(System.Object)">
            <summary>
            获取目标对应的通用编辑器对象
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditorHelper.Get``1(System.Object)">
            <summary>
            获取目标对应的通用编辑器对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CommonEditorAttribute">
            <summary>
            通用编辑器特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CommonEditorAttribute.editorForChildClasses">
            <summary>
            编辑器可用于子类
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditorAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="type"></param>
            <param name="editorForChildClasses"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ICommonEditor">
            <summary>
            通用编辑器接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ICommonEditor.target">
            <summary>
            目标
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ICommonEditor.InitTarget(System.Object)">
            <summary>
            初始化目标
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CommonEditor">
            <summary>
            通用编辑器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CommonEditor.target">
            <summary>
            目标
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditor.GetCommonEditor(System.Object)">
            <summary>
            获取通用编辑器
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditor.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditor.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditor.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CommonEditor.DefaultDraw">
            <summary>
            默认绘制
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.GlobalVariableAttributeDrawer">
            <summary>
            全局变量特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GlobalVariableAttributeDrawer.IsVariableSelect(UnityEditor.SerializedProperty)">
            <summary>
            判断是否是变量被选择
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GlobalVariableAttributeDrawer.GetVariableNameWhenEnum(UnityEditor.SerializedProperty)">
            <summary>
            当枚举时获取变量名
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GlobalVariableAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.VarStringAttributeDrawer">
            <summary>
            变量字符串特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.UserDefineFunAttributeDrawer">
            <summary>
            用户自定义函数特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UserDefineFunAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputAttributeDrawer">
            <summary>
            输入特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.LimitRangeAttributeDrawer">
            <summary>
            限定范围特性绘制器;仅修饰Vector2是有效
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LimitRangeAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.LimitRangeIntAttributeDrawer">
            <summary>
             限定范围整数特性绘制器；仅修饰Vector2Int是有效
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.LimitRangeIntAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PasswordTextAttributeDrawer">
            <summary>
            密码文本特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PasswordTextAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PropertyDrawer`1">
            <summary>
            属性绘制器泛型类
            </summary>
            <typeparam name="T">属性特性类型</typeparam>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.PropertyDrawer`1.SpaceWidth">
            <summary>
            间隔宽度
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PropertyDrawer`1.propertyAttribute">
            <summary>
            属性特性
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyDrawer`1.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI时
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PropertyDrawer`1.GetMemberValue(UnityEditor.SerializedProperty,System.String)">
            <summary>
            获取成员值，获取与属性同层级的成员对应的值；
            </summary>
            <param name="property"></param>
            <param name="memberNameOfSameDepth"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.TexturePreviewAttributeDrawer">
            <summary>
            纹理预览特性绘制器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.TexturePreviewAttributeDrawer.hasPreview">
            <summary>
            有预览
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TexturePreviewAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TexturePreviewAttributeDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            获取属性高度
            </summary>
            <param name="property"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EnumPopupAttributeDrawer">
            <summary>
            枚举弹出菜单特性绘制器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EnumPopupAttributeDrawer.enumType">
            <summary>
            枚举类型
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EnumPopupAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.DynamicLabelAttributeDrawer">
            <summary>
            动态标签特性绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.DynamicLabelAttributeDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            绘制GUI
            </summary>
            <param name="position"></param>
            <param name="property"></param>
            <param name="label"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorIconHelper">
            <summary>
            编辑器图标助手类
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorIconHelper.DefaultIcon">
            <summary>
            默认图标
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EditorIconHelper.DefaultIconExt">
            <summary>
            默认图标扩展名
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EditorIconHelper.DefaultSize">
            <summary>
            默认尺寸
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EditorIconHelper.DefaultIconSize">
            <summary>
            默认图标尺寸
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetValidIcon(UnityEngine.Texture2D,UnityEngine.Texture2D,System.Boolean)">
            <summary>
            获取有效图标
            </summary>
            <param name="icon"></param>
            <param name="defaultIcon"></param>
            <param name="autoUseDefaultIcon"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconByAssetsPath(System.String,XCSJ.Attributes.ESkinRule,UnityEngine.Texture2D,System.Func{System.String,UnityEngine.Texture2D},System.Func{System.String,UnityEngine.Texture2D},System.Boolean)">
            <summary>
            通过资产路径获取图标
            </summary>
            <param name="iconAssetsPath"></param>
            <param name="skinRule"></param>
            <param name="defaultIcon"></param>
            <param name="beforeFindCommonIconFunc"></param>
            <param name="afterFindCommonIconFunc"></param>
            <param name="autoUseDefaultIcon"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconByAssetsPath(System.String,UnityEngine.Texture2D,System.Func{System.String,UnityEngine.Texture2D},System.Func{System.String,UnityEngine.Texture2D},System.Boolean)">
            <summary>
            通过资产路径获取图标
            </summary>
            <param name="iconAssetsPath"></param>
            <param name="defaultIcon"></param>
            <param name="beforeFindCommonIconFunc"></param>
            <param name="afterFindCommonIconFunc"></param>
            <param name="autoUseDefaultIcon"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconWithoutCache(System.String,UnityEngine.Vector2Int,XCSJ.Attributes.ESkinRule)">
            <summary>
            不使用缓存获取图标
            </summary>
            <param name="name"></param>
            <param name="size"></param>
            <param name="skinRule"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconInLib(System.Enum)">
            <summary>
            获取图标库中图标
            </summary>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconInLib(System.Reflection.MemberInfo,UnityEngine.Texture2D)">
            <summary>
            获取图标库中图标
            </summary>
            <param name="memberInfo"></param>
            <param name="defaultTexture"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconInLib(System.String,UnityEngine.Texture2D,System.Boolean)">
            <summary>
            获取图标库中图标
            </summary>
            <param name="name"></param>
            <param name="defaultTexture"></param>
            <param name="needDefault"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconInLib(System.String,System.Int32,XCSJ.Attributes.ESkinRule,System.Boolean,UnityEngine.Texture2D)">
            <summary>
            获取图标库中图标
            </summary>
            <param name="name"></param>
            <param name="size"></param>
            <param name="skinRule"></param>
            <param name="needDefault"></param>
            <param name="defaultTexture"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.GetIconInLib(System.String,UnityEngine.Vector2Int,XCSJ.Attributes.ESkinRule,System.Boolean,UnityEngine.Texture2D)">
            <summary>
            获取图标库中图标
            </summary>
            <param name="name"></param>
            <param name="size"></param>
            <param name="skinRule"></param>
            <param name="needDefault"></param>
            <param name="defaultTexture"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorIconHelper.ClearCache">
            <summary>
            清理缓存
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.SerializedObjectHelper">
            <summary>
            序列化对象助手
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.TryGetSerializedPropertyValue(UnityEditor.SerializedProperty,System.Object@)">
            <summary>
            尝试获取序列化属性值
            </summary>
            <param name="serializedProperty"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetSerializedPropertyValue(UnityEditor.SerializedProperty)">
            <summary>
            根据SerializedProperty的值类型获取对应的值，并转化为基础对象类型；在获取过程中会发生装箱操作；
            </summary>
            <param name="serializedProperty">序列化属性</param>
            <returns>返回序列化属性的值；</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.SetSerializedPropertyValue(UnityEditor.SerializedProperty,System.Object)">
            <summary>
            设置序列化属性值
            </summary>
            <param name="serializedProperty">待处理的序列化属性对象</param>
            <param name="value">新的属性值，使用时会通过<see cref="T:XCSJ.Algorithms.Converter"/>尝试将本参数转化为属性类型对应类型的对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.AddArrayElement(UnityEditor.SerializedProperty,UnityEngine.Object)">
            <summary>
            添加数组元素；数组末尾添加；
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="value">Unity对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.AddArrayElement(UnityEditor.SerializedProperty,UnityEditor.SerializedPropertyType,System.Action{UnityEditor.SerializedProperty})">
            <summary>
            添加数组元素；数组末尾添加；
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="serializedPropertyType">序列化属性类型</param>
            <param name="setValue">为数组元素序列化属性设置值</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.AddArrayElement(UnityEditor.SerializedProperty)">
            <summary>
            添加数组元素；数组末尾添加；
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <returns>添加失败返回null；否则返回新添加数组元素对应的序列化属性对象</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.AddArrayElement(UnityEditor.SerializedProperty,System.Int32@)">
            <summary>
            添加数组元素；数组末尾添加；
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="index">返回新添加元素的索引</param>
            <returns>添加失败返回null；否则返回新添加数组元素对应的序列化属性对象</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArrayElement(UnityEditor.SerializedProperty,System.Int32@,System.Func{UnityEditor.SerializedProperty,System.Int32,System.Boolean})">
            <summary>
            获取数组元素
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="index">返回值元素在数组中的索引</param>
            <param name="predicate">期望获取元素的判断依据</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArrayElement(UnityEditor.SerializedProperty,System.Func{UnityEditor.SerializedProperty,System.Int32,System.Boolean})">
            <summary>
            获取数组元素
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="predicate">期望获取元素的判断依据</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArrayElement(UnityEditor.SerializedProperty,System.Int32@,System.Func{UnityEditor.SerializedProperty,System.Boolean})">
            <summary>
            待处理的数组序列化属性
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="index">返回值元素在数组中的索引</param>
            <param name="predicate">期望获取元素的判断依据</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArrayElement(UnityEditor.SerializedProperty,System.Func{UnityEditor.SerializedProperty,System.Boolean})">
            <summary>
            待处理的数组序列化属性
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="predicate">期望获取元素的判断依据</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArraySizeSerializedProperty(UnityEditor.SerializedProperty)">
            <summary>
            获取数组大小序列化属性
            </summary>
            <param name="arraySerializedProperty"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArraySerializedProperty(UnityEditor.SerializedProperty)">
            <summary>
            通过元素序列化属性获取所在的数组序列化属性
            </summary>
            <param name="elementSerializedProperty">元素序列化属性</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.GetArraySerializedProperty(UnityEditor.SerializedProperty,System.Int32@)">
            <summary>
            通过元素序列化属性获取所在的数组序列化属性
            </summary>
            <param name="elementSerializedProperty">元素序列化属性</param>
            <param name="index">元素在数组中的索引</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.DeleteArrayElementCommand(UnityEditor.SerializedProperty)">
            <summary>
            删除数组元素命令；通过元素获取所在数组，然后将元素从数组中删除；会先查找元素所在数组，之后延时调用删除元素命令并对序列化对象应用修改属性；如果不需要延时调用，可直接执行<see cref="M:UnityEditor.SerializedProperty.DeleteCommand"/>即可完成删除；因Unity机制，如果数组元素序列化对象为Unity对象类型且不为空时，第一次删除变为空，第二次删除才能删除该空元素，所以此种情况时需要连续删除两次；
            </summary>
            <param name="elementSerializedProperty">待删除的数组元素</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.InsertArrayElementAtThisIndex(UnityEditor.SerializedProperty)">
            <summary>
            在当前数组元素索引位置插入新的数组元素；会先查找元素所在数组与其索引，之后直接在该数组的索引位置插入新的数组元素；新插入元素的信息与传入的参数数组元素信息内容一致；
            </summary>
            <param name="elementSerializedProperty">数组元素</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.DeleteArrayInvalidElements(UnityEditor.SerializedProperty)">
            <summary>
            删除数组中无效元素；
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.DeleteArrayInvalidElements(UnityEditor.SerializedProperty,System.Func{UnityEditor.SerializedProperty,System.Int32,UnityEditor.SerializedProperty,System.Boolean})">
            <summary>
            删除数组中无效元素
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="validFunc">有效性函数;如果返回Flase，即认为是无效项</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.DeleteArrayElement(UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            删除数组中指定索引的元素
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="index">期望删除的数组索引</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.DeleteArrayElement(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            当数组元素类型是Unity的Object类型时，删除索引项需要特殊处理！
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="elementSerializedProperty">期望删除的数组元素序列化属性</param>
            <param name="index">期望删除的数组索引</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.SetExpandedRecurse(UnityEditor.SerializedProperty,System.Boolean)">
            <summary>
            设置展开递归
            </summary>
            <param name="property"></param>
            <param name="expanded"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.HasVisibleChildFields(UnityEditor.SerializedProperty)">
            <summary>
            有可视化子级字段
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementDistinct(UnityEditor.SerializedProperty,System.Func{XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo,XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo,System.Boolean})">
            <summary>
            数组元素去重
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="equalityComparer">相等比较器</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementReverse(UnityEditor.SerializedProperty)">
            <summary>
            数组元素逆序
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementSort(UnityEditor.SerializedProperty,System.Comparison{XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo})">
            <summary>
            数组元素排序
            </summary>
            <param name="arraySerializedProperty">待处理的数组序列化属性</param>
            <param name="comparison">比较器</param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo">
            <summary>
            数组元素信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo.index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.SerializedObjectHelper.ArrayElementInfo.serializedProperty">
            <summary>
            索引对应的序列化属性
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.SerializedObjectHelper.ConvertValueTo``1(UnityEditor.SerializedProperty)">
            <summary>
            转化值为期望模版类型：将序列化属性由所在目标对象开始到序列化属性所有层级的值尝试转为期望的模版类型，由根级到子级的顺序执行处理；
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedProperty"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.UndoHelper">
            <summary>
            撤销助手
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.RecordRename(UnityEngine.Object[])">
            <summary>
            记录重命名
            </summary>
            <param name="objectsToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.RegisterCreatedObjectUndo(UnityEngine.Object)">
            <summary>
            注册创建对象对象
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.DestroyObjectImmediate(UnityEngine.Object)">
            <summary>
            销毁对象
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.RegisterCompleteObjectUndo(UnityEngine.Object[])">
            <summary>
            注册完整对象
            </summary>
            <param name="objectsToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.RecordSetTransformParent(UnityEngine.Transform,UnityEngine.Transform)">
            <summary>
            设置父变换
            </summary>
            <param name="child"></param>
            <param name="parent"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.RegisterObjectReferenceInScene(UnityEngine.Object)">
            <summary>
            查找当前激活场景中所有引用objectToUndo的对象引用，将所有的对象引用做完整注册；
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.DestroyObjectWithRegisterObjectReferenceInScene(UnityEngine.Object)">
            <summary>
            查找当前激活场景中所有引用objectToUndo的对象引用，将所有的对象引用做完整注册，之后删除objectToUndo对象；
            </summary>
            <param name="objectToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.DestroyModelWithRegisterObjectReferenceInScene(XCSJ.PluginCommonUtils.ComponentModel.Model)">
            <summary>
            查找当前激活场景中所有引用modelToUndo的对象引用，将所有的对象引用做完整注册，之后删除modelToUndo对象；
            </summary>
            <param name="modelToUndo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UndoHelper.DestroyModelsWithRegisterObjectReferenceInScene(System.Collections.Generic.IEnumerable{XCSJ.PluginCommonUtils.ComponentModel.Model})">
            <summary>
            批量查找当前激活场景中所有引用modelsToUndo的对象引用，将所有的对象引用做完整注册，之后删除modelsToUndo对象；
            </summary>
            <param name="modelsToUndo"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XEditorGUI">
            <summary>
            XDreamer的编辑器GUI绘制
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI._DrawFieldValue(System.Object,System.Reflection.FieldInfo,System.Object,System.Boolean,UnityEngine.GUIContent,System.Func{System.Object,System.Reflection.FieldInfo,System.Boolean},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object})">
            <summary>
            渲染对象的字段值
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
            <param name="expand"></param>
            <param name="label"></param>
            <param name="onGUI"></param>
            <param name="onAfterHorizontal"></param>
            <param name="onBeforeVertical"></param>
            <param name="onAfterVertical"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DrawObject(System.Object,System.Func{System.Object,System.Reflection.FieldInfo,System.Boolean},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object})">
            <summary>
            绘制对象
            </summary>
            <param name="obj"></param>
            <param name="onGUI"></param>
            <param name="onAfterHorizontal"></param>
            <param name="onBeforeVertical"></param>
            <param name="onAfterVertical"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DrawObject(XCSJ.Interfaces.IExpand,System.Func{System.Object,System.Reflection.FieldInfo,System.Boolean},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object})">
            <summary>
            绘制对象
            </summary>
            <param name="expand"></param>
            <param name="onGUI"></param>
            <param name="onAfterHorizontal"></param>
            <param name="onBeforeVertical"></param>
            <param name="onAfterVertical"></param>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.IndexWidth">
            <summary>
            索引列宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.OperationTitleWidth">
            <summary>
            操作标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.OperationElementOptions">
            <summary>
            操作中每个元素按钮的选项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DrawList``1(System.Collections.Generic.IList{``0},System.Action,System.Action{``0,System.Int32},System.Single,System.Single,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">带绘制的列表</param>
            <param name="onDrawTitle">绘制列表元素成员字段对应列的标题；已开启横向布局；</param>
            <param name="onDrawElement">绘制列表元素的具体元素成员信息；已开启横向布局；</param>
            <param name="indexWidth">索引列的宽度</param>
            <param name="operationTitleWidth">操作标题的宽度</param>
            <param name="operationElementOptions">操作元素选项；即中操作中每个功能按钮的布局选项；</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DefautListOperation``1(XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags,System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            默认链表处理，用于缺省处理EListOperationFlags.Default的枚举情况
            </summary>
            <typeparam name="T"></typeparam>
            <param name="operationFlags"></param>
            <param name="list"></param>
            <param name="i"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DrawListOperation``1(System.Collections.Generic.IList{``0},System.Int32,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制链表操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="i"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.DrawListOperation``1(System.Collections.Generic.IList{``0},System.Int32,XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags,System.Action{XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags,System.Collections.Generic.IList{``0},System.Int32},UnityEngine.GUILayoutOption[])">
            <summary>
            绘制链表操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="i"></param>
            <param name="operationFlags"></param>
            <param name="onClick"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XEditorGUI.HasAnyFlag(XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags,XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags)">
            <summary>
            有任意标识
            </summary>
            <param name="operationFlags"></param>
            <param name="operationFlag"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags">
            <summary>
            列表操作标识
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Top">
            <summary>
            顶
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Up">
            <summary>
            上
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Down">
            <summary>
            下
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Bottom">
            <summary>
            底
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.New">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.InsertChild">
            <summary>
            插入子级
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Insert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.Default">
            <summary>
            包含置顶、置底、上移、下移、删除
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XEditorGUI.EListOperationFlags.All">
            <summary>
            包含置顶、置底、上移、下移、新建、插入子项、插入、删除
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.GizmosIconLib`2">
            <summary>
            Gizmos图标库
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.GizmosIconLib`2.SuffixWithExt">
            <summary>
            带扩展名后缀
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.GizmosIconLib`2.DefaultIcon">
            <summary>
            默认图标
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.GizmosIconLib`2.autoUseDefaultIcon">
            <summary>
            自动使用默认图标
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.GizmosIconLib`2.suffixWithExt">
            <summary>
            带扩展名后缀
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.GizmosIconLib`2.assetsDirectory">
            <summary>
            资产目录
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.GetIcon(`1)">
            <summary>
            获取图标
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.GetAssetsPath(`1,XCSJ.PluginCommonUtils.GizmosIconAttribute)">
            <summary>
            获取资产路径
            </summary>
            <param name="key"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.ToIconName(`1)">
            <summary>
            转图标名
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.GetWithoutCache(`1)">
            <summary>
            不使用缓存获取图标
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.Get(`1)">
            <summary>
            获取
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.GizmosIconLib`2.TryGet(`1,UnityEngine.Texture2D@)">
            <summary>
            尝试获取
            </summary>
            <param name="key"></param>
            <param name="texture2D"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.GizmosIconLib">
            <summary>
            Gizmos图标库
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.GizmosIconLib.assetsDirectory">
            <summary>
            资产目录
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.MenuInfo">
            <summary>
            菜单信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.MenuInfo.menuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuInfo.GetItemCount">
            <summary>
            菜单项数量
            </summary>
            <returns>数量</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuInfo.AddMenuItem(System.String,System.Action,System.Func{System.Boolean},System.Int32,XCSJ.PluginCommonUtils.Menus.ESeparatorType,System.Boolean)">
            <summary>
            添加菜单项
            </summary>
            <param name="itemName"></param>
            <param name="funDelegate"></param>
            <param name="validFun"></param>
            <param name="index"></param>
            <param name="separatorType"></param>
            <param name="autoClear"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuInfo.AddMenuItem(System.String,System.Action{System.Object},System.Object,System.Func{System.Boolean},System.Int32,XCSJ.PluginCommonUtils.Menus.ESeparatorType,System.Boolean)">
            <summary>
            添加菜单项
            </summary>
            <param name="itemName"></param>
            <param name="funDelegate1"></param>
            <param name="userData"></param>
            <param name="validFun"></param>
            <param name="index"></param>
            <param name="separatorType"></param>
            <param name="autoClear"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuInfo.AddMenuItem(System.String,System.Action{System.Object},System.Object,System.Func{System.Object,System.Boolean},System.Int32,XCSJ.PluginCommonUtils.Menus.ESeparatorType,System.Boolean)">
            <summary>
            添加菜单项
            </summary>
            <param name="itemName"></param>
            <param name="funDelegate1"></param>
            <param name="userData"></param>
            <param name="validFun"></param>
            <param name="index"></param>
            <param name="separatorType"></param>
            <param name="autoClear"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.MenuHelper">
            <summary>
            菜单组手类
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuHelper.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuHelper.DrawMenu(System.String,System.Action{XCSJ.EditorCommonUtils.MenuInfo},System.Object)">
            <summary>
            绘制菜单
            </summary>
            <param name="menuName"></param>
            <param name="initFun"></param>
            <param name="overrideUserData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuHelper.DrawMenu``1(System.Action{XCSJ.EditorCommonUtils.MenuInfo},System.Object)">
            <summary>
            绘制菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="initFun"></param>
            <param name="overrideUserData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuHelper.DrawMenu(UnityEngine.Rect,System.String,System.Action{XCSJ.EditorCommonUtils.MenuInfo},System.Object)">
            <summary>
            绘制菜单
            </summary>
            <param name="position"></param>
            <param name="menuName"></param>
            <param name="initFun"></param>
            <param name="overrideUserData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.MenuHelper.DrawMenu``1(UnityEngine.Rect,System.Action{XCSJ.EditorCommonUtils.MenuInfo},System.Object)">
            <summary>
            绘制菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="position"></param>
            <param name="initFun"></param>
            <param name="overrideUserData"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PreferenceAttribute">
            <summary>
            首选项特性
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IOptionEditor">
            <summary>
            选项编辑器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IOptionEditor.option">
            <summary>
            选项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnBeforeVertical">
            <summary>
            当纵向绘制之前
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnAfterVertical">
            <summary>
            当纵向绘制之后
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            绘制GUI
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnBeforeVertical(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当纵向绘制之前
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnAfterVertical(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当纵向绘制之后
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IOptionEditor.OnAfterHorizontal(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当横向绘制之后
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.OptionEditor">
            <summary>
            选项编辑器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.OptionEditor.option">
            <summary>
            选项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            绘制GUI
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnBeforeVertical">
            <summary>
            当纵向绘制之前
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnAfterVertical">
            <summary>
            当纵向绘制之后
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnBeforeVertical(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当纵向绘制之前
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnAfterVertical(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当纵向绘制之后
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.OptionEditor.OnAfterHorizontal(System.Object,System.Reflection.FieldInfo,System.Object)">
            <summary>
            当横向绘制之后
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <param name="fieldValue"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IPreferenceEditor">
            <summary>
            首选项编辑器接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IPreferenceEditor.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IPreferenceEditor.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IPreferenceEditor`1">
            <summary>
            首选项编辑器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IPreferenceEditor`1.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PreferenceEditor">
            <summary>
            首选项编辑器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PreferenceEditor.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PreferenceEditor.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PreferenceEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            绘制GUI
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PreferenceEditor.FieldInSearch(System.Reflection.FieldInfo)">
            <summary>
            字段在搜索
            </summary>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PreferenceEditor.FieldInSearch(System.String)">
            <summary>
            字段在搜索
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.PreferenceEditor.InSearch(System.String)">
            <summary>
            在搜索
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.PreferenceEditor`1">
            <summary>
            首选项编辑器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.PreferenceEditor`1.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IPreference">
            <summary>
            首选项接口
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Preferences">
            <summary>
            首选项
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.resetConfig">
            <summary>
            重置:将当前配置信息重置为初始值
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.saveConfig">
            <summary>
            保存:将当前配置信息保存;所有配置项在界面中修改后会自动保存;
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.expandAll">
            <summary>
            展开:将所有折叠标签全部展开
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.unexpandAll">
            <summary>
            关闭:将所有折叠标签全部关闭
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.Preferences.onOptionModified">
            <summary>
            当选项修改后
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.Preferences.onOptionInit">
            <summary>
            当选项初始化
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo">
            <summary>
            首选项信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.obsoleteAttribute">
            <summary>
            过时特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.preferenceEditor">
            <summary>
            首选项编辑器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.preferenceAttribute">
            <summary>
            首选项特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.key">
            <summary>
            键值
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.IsDirty">
            <summary>
            是否脏
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.MarkDirty">
            <summary>
            标记脏
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferenceInfo.AnySearch(System.String)">
            <summary>
            任意搜索
            </summary>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo">
            <summary>
            首选项信息
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.attributeType">
            <summary>
            特性类型
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.options">
            <summary>
            选项列表
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.Get``1">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.Get(System.Type)">
            <summary>
            获取
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="optionName"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.DrawOptions(System.String)">
            <summary>
            绘制选项
            </summary>
            <param name="searchText"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.DrawButtons">
            <summary>
            绘制按钮
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.Draw(System.String)">
            <summary>
            绘制
            </summary>
            <param name="searchText"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.MarkDirty">
            <summary>
            标记脏
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.OnActivate(System.String)">
            <summary>
            当激活时
            </summary>
            <param name="searchContext"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.OnDeactivate">
            <summary>
            当非激活时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.PreferencesInfo.GetKeywords">
            <summary>
            获取关键字
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.GetPreferencesInfo``1">
            <summary>
            获取首选项信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.GetPreferencesInfo(System.Type)">
            <summary>
            获取首选项信息
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.Draw``1">
            <summary>
            绘制
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.GetOption``2">
            <summary>
            获取选项
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <typeparam name="TOption"></typeparam>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.GetOption``1(System.Type)">
            <summary>
            获取选项
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="optionType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.Preferences.OpenWindow(System.String)">
            <summary>
            打开窗口
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.UICommonFun">
            <summary>
            UI通用函数
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TempContent(System.String[])">
            <summary>
            临时内容
            </summary>
            <param name="texts"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetStyleIndex(System.Int32,System.Int32)">
            <summary>
            获取样式索引
            </summary>
            <param name="count"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetMiniButtonStyle(System.Int32,System.Int32)">
            <summary>
            获取Mini按钮样式
            </summary>
            <param name="count"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetBackgroundColor(System.Boolean)">
            <summary>
            获取背景色
            </summary>
            <param name="hasBoxBackground"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TextCancleButton(System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制文本取消按钮
            </summary>
            <param name="clickAction">点击回调函数</param>
            <param name="options">布局配置</param>
            <returns>发生点击返回True；否则返回False</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SearchTextField(System.String,System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制搜索文本，带文本取消按钮
            </summary>
            <param name="text">文本内容</param>
            <param name="name">控件名称</param>
            <param name="focusWhenTextEmpty">文本内容空时，是否获取焦点</param>
            <param name="searchTextStyle">搜索文本控件的样式</param>
            <param name="cancelButtonStyle">文本取消按钮控件的样式</param>
            <param name="options"></param>
            <returns>文本内容</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.RichHelpBox(System.String,UnityEditor.MessageType)">
            <summary>
            绘制富文本帮助框
            </summary>
            <param name="message">消息</param>
            <param name="messageType">消息类型</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.RichHelpBoxOfObsoleteAttribute(System.ObsoleteAttribute)">
            <summary>
            绘制ObsoleteAttribute特性信息的富文本帮助框
            </summary>
            <param name="obsoleteAttribute">ObsoleteAttribute特性对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(UnityEngine.Rect,System.Enum)">
            <summary>
            枚举弹出菜单
            </summary>
            <param name="position"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
            <summary>
            枚举弹出菜单
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
            <summary>
            枚举弹出菜单
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="selected"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(System.Enum,UnityEngine.GUILayoutOption[])">
            <summary>
            将枚举类型输出为Popup选择栏，根据当前语言环境进行对应填充
            </summary>
            <param name="selected"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            枚举弹出菜单
            </summary>
            <param name="selected"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
            <summary>
            枚举弹出菜单
            </summary>
            <param name="label"></param>
            <param name="selected"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            将枚举类型输出为Popup选择栏，根据中英文进行对应填充
            </summary>
            <param name="label"></param>
            <param name="selected"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumPopup(System.Type,System.Int32,UnityEngine.GUILayoutOption[])">
            <summary>
            枚举
            </summary>
            <param name="enumType"></param>
            <param name="enumValue"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EnumButton``1(System.Action{``0},System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,XCSJ.PluginCommonUtils.ENameTip,UnityEngine.GUILayoutOption[])">
            <summary>
            枚举按钮
            </summary>
            <typeparam name="T"></typeparam>
            <param name="onClick"></param>
            <param name="needHorizontal"></param>
            <param name="hasPrefixLabel"></param>
            <param name="leftStyle"></param>
            <param name="midStyle"></param>
            <param name="rightStyle"></param>
            <param name="oneStyle"></param>
            <param name="nameTip"></param>
            <param name="buttonOptions"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Pupup(UnityEngine.GUIContent,System.String,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            字符串弹出菜单
            </summary>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Pupup(UnityEngine.Rect,UnityEngine.GUIContent,System.String,System.String[],UnityEngine.GUIStyle)">
            <summary>
            字符串弹出菜单
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.GUIContent,System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单，有TextField框；
            </summary>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.GUIContent,System.String,System.String[],System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制弹出框
            </summary>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="hasTextField"></param>
            <param name="options">hasTextField为True时，本参数用于修饰TextField；hasTextField为False时，本参数用于修饰Popup；</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.GUIContent,System.String,System.String[],System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制弹出框
            </summary>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="hasTextField"></param>
            <param name="style"></param>
            <param name="options">hasTextField为True时，本参数用于修饰TextField；hasTextField为False时，本参数用于修饰Popup；</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,System.String,System.String[])">
            <summary>
            绘制字符串弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.String,System.String[])">
            <summary>
            绘制弹出框
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.String,System.String[],System.Boolean,System.Single)">
            <summary>
            绘制弹出框
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="hasTextField"></param>
            <param name="popupWidth"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单，有TextField框；
            </summary>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="options">本参数用于修饰TextField</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.String,System.String[],System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单
            </summary>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="hasTextField">hasTextField为True时，本参数用于修饰TextField；hasTextField为False时，本参数用于修饰Popup；</param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.String,System.String[],System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单
            </summary>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="hasTextField">hasTextField为True时，本参数用于修饰TextField；hasTextField为False时，本参数用于修饰Popup；</param>
            <param name="guiStyle"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.Boolean,System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单，有TextField框；
            </summary>
            <param name="needFormat">标识是否格式化字符串</param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="options">本参数用于修饰TextField</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.PopupFormat(UnityEngine.GUIContent,System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单，有TextField框；会格式化字符串；
            </summary>
            <param name="label"></param>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="options">本参数用于修饰TextField</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.PopupFormat(System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            绘制字符串弹出式菜单，有TextField框；会格式化字符串；
            </summary>
            <param name="selectText"></param>
            <param name="stringArray"></param>
            <param name="options">本参数用于修饰TextField</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonToggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            切换型按钮
            </summary>
            <param name="label"></param>
            <param name="value"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonToggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            切换型按钮
            </summary>
            <param name="label"></param>
            <param name="value"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonToggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
            <summary>
            切换型按钮
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="value"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TextFieldFormat(System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            带格式化的文本字段；符合变量命名的规则
            </summary>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TextFieldFormat(UnityEngine.Rect,System.String)">
            <summary>
            带格式化的文本字段；符合变量命名的规则
            </summary>
            <param name="rect"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TextFieldFormat(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            带格式化的文本字段；符合变量命名的规则
            </summary>
            <param name="label"></param>
            <param name="text"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TextFieldFormat(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
            <summary>
            带格式化的文本字段；符合变量命名的规则
            </summary>
            <param name="rect"></param>
            <param name="label"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSlider(UnityEngine.Rect,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="position"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="position"></param>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSlider(UnityEngine.Rect,System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="position"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,System.Double@,System.Double@,System.Double,System.Double,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,System.Double@,System.Double@,System.Double,System.Double,UnityEngine.GUILayoutOption[])">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="options">字段GUI布局选项</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(System.Double@,System.Double@,System.Double,System.Double,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(System.Int32@,System.Int32@,System.Int32,System.Int32,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minLimit"></param>
            <param name="maxLimit"></param>
            <param name="fieldWidth"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="value"></param>
            <param name="limit"></param>
            <param name="fieldWidth"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.GUIContent,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="label"></param>
            <param name="value"></param>
            <param name="limit"></param>
            <param name="fieldWidth"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="value"></param>
            <param name="limit"></param>
            <param name="fieldWidth"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MinMaxSliderLayout(UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Single)">
            <summary>
            区间滑动条
            </summary>
            <param name="value"></param>
            <param name="limit"></param>
            <param name="fieldWidth"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparatorLayout(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            分隔符
            </summary>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparatorLayout(UnityEngine.Vector2,System.Boolean,System.Boolean,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            分隔符
            </summary>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparatorLayout(UnityEngine.Vector2,System.Boolean,System.Boolean,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
            <summary>
            分隔符
            </summary>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparatorLayout(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            分隔符
            </summary>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparator(UnityEngine.Rect,UnityEngine.Vector2,System.Boolean,System.Boolean,System.Single,System.Single,UnityEngine.GUIStyle)">
            <summary>
            分隔符
            </summary>
            <param name="rect"></param>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ResizeSeparator(UnityEngine.Rect,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle)">
            <summary>
            分隔符
            </summary>
            <param name="rect"></param>
            <param name="value"></param>
            <param name="isHorizontal"></param>
            <param name="isLeftTop"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SeparatorLine(UnityEngine.Color,System.Boolean,System.Int32,System.Int32)">
            <summary>
            分隔符线条
            </summary>
            <param name="color"></param>
            <param name="isHorizontal"></param>
            <param name="thickness"></param>
            <param name="padding"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Label(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.FontStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            标签
            </summary>
            <param name="label"></param>
            <param name="textColor"></param>
            <param name="fontStyle"></param>
            <param name="style"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Label(System.String,UnityEngine.Color,UnityEngine.FontStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            标签
            </summary>
            <param name="text"></param>
            <param name="textColor"></param>
            <param name="fontStyle"></param>
            <param name="style"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Func{System.Single},System.Action{UnityEngine.Rect})">
            <summary>
            折页
            </summary>
            <param name="position"></param>
            <param name="value"></param>
            <param name="label"></param>
            <param name="afterWidthFunc"></param>
            <param name="afterDrawFunc"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean,System.Func{System.Single},System.Action{UnityEngine.Rect})">
            <summary>
            折页
            </summary>
            <param name="position"></param>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="afterWidthFunc"></param>
            <param name="afterDrawFunc"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,System.Action,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="style"></param>
            <param name="before"></param>
            <param name="after"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.Color,UnityEngine.Color,UnityEngine.FontStyle,UnityEngine.GUIStyle,System.Action,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="textColor"></param>
            <param name="expandTextColor"></param>
            <param name="fontStyle"></param>
            <param name="style"></param>
            <param name="before"></param>
            <param name="after"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,System.Action,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="before"></param>
            <param name="after"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,System.Action,System.Action)">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="hasHorizontalBox"></param>
            <param name="before"></param>
            <param name="after"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent,System.Action)">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="after"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.GUIContent)">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,System.String)">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.Texture2D,System.Boolean@,UnityEngine.GUIContent,System.Action,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="texture2D"></param>
            <param name="toggleValue"></param>
            <param name="label"></param>
            <param name="after"></param>
            <param name="hasHorizontalBox"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Foldout(System.Boolean,UnityEngine.Texture2D,System.Boolean@,UnityEngine.GUIContent,System.Action,System.Action,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            折页
            </summary>
            <param name="value"></param>
            <param name="texture2D"></param>
            <param name="toggleValue"></param>
            <param name="label"></param>
            <param name="after"></param>
            <param name="onContextClick"></param>
            <param name="hasHorizontalBox"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ProgressBarLayout(System.Single,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            进度条
            </summary>
            <param name="value"></param>
            <param name="text"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ProgressBarLayout(System.Single,System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            进度条
            </summary>
            <param name="value"></param>
            <param name="text"></param>
            <param name="color"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SelectImageButtonInAssets(System.String@,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            选择图片按钮（在资产文件夹中）
            </summary>
            <param name="imagePathInAssets"></param>
            <param name="content"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SelectFileButtonInAssets(System.String@,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.String,System.String[],UnityEngine.GUILayoutOption[])">
            <summary>
            选择文件按钮（在资产文件夹中）
            </summary>
            <param name="filePathInAssets"></param>
            <param name="content"></param>
            <param name="style"></param>
            <param name="title"></param>
            <param name="filters"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DrawSaveFile(UnityEngine.GUIContent,UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制保存文件
            </summary>
            <param name="label"></param>
            <param name="buttonLabel"></param>
            <param name="filePath"></param>
            <param name="buttonOptions"></param>
            <returns>如果不执行保存，返回空字符串</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DrawSaveFolder(UnityEngine.GUIContent,UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制保存文件夹
            </summary>
            <param name="label"></param>
            <param name="buttonLabel"></param>
            <param name="folderPath"></param>
            <param name="buttonOptions"></param>
            <returns>如果不执行保存，返回空字符串</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DrawOpenFile(UnityEngine.GUIContent,UnityEngine.GUIContent,System.String,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制打开文件
            </summary>
            <param name="label"></param>
            <param name="buttonLabel"></param>
            <param name="filePath"></param>
            <param name="extension"></param>
            <param name="buttonOptions"></param>
            <returns>如果不执行打开，返回空字符串</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DrawOpenFolder(UnityEngine.GUIContent,UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制打开文件夹
            </summary>
            <param name="label"></param>
            <param name="buttonLabel"></param>
            <param name="folderPath"></param>
            <param name="buttonOptions"></param>
            <returns>如果不执行打开，返回空字符串</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetFileFilters">
            <summary>
            获取文件过滤器：目前已知的Unity中常用的文件扩展名；
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.NotificationButtonLayout(System.String,System.String)">
            <summary>
            通知按钮
            </summary>
            <param name="text"></param>
            <param name="tooltip"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.NotificationButtonLayout(UnityEngine.GUIContent)">
            <summary>
            通知按钮
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Notification(UnityEngine.Vector2,System.String)">
            <summary>
            通知
            </summary>
            <param name="windowSize"></param>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Notification(UnityEngine.Vector2,UnityEngine.GUIContent)">
            <summary>
            通知
            </summary>
            <param name="windowSize"></param>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Notification(UnityEngine.Rect,System.String)">
            <summary>
            通知
            </summary>
            <param name="rect"></param>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Notification(UnityEngine.Rect,UnityEngine.GUIContent)">
            <summary>
            通知
            </summary>
            <param name="rect"></param>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.NotificationLayout(System.String)">
            <summary>
            通知
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.NotificationLayout(UnityEngine.GUIContent)">
            <summary>
            通知
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,System.Type,UnityEngine.Component,XCSJ.PluginCommonUtils.ESearchFlags)">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="componentType"></param>
            <param name="component"></param>
            <param name="searchFlags"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,System.Type,UnityEngine.GameObject,XCSJ.PluginCommonUtils.ESearchFlags)">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="componentType"></param>
            <param name="go"></param>
            <param name="searchFlags"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup``1(``0,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="component"></param>
            <param name="includeInactive"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.Type,UnityEngine.Component,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="componentType"></param>
            <param name="component"></param>
            <param name="includeInactive"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.Type,UnityEngine.Component,XCSJ.PluginCommonUtils.ESearchFlags,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="componentType"></param>
            <param name="component"></param>
            <param name="searchFlags"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup``1(UnityEngine.GameObject,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="go"></param>
            <param name="includeInactive"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.Type,UnityEngine.GameObject,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="componentType"></param>
            <param name="go"></param>
            <param name="includeInactive"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(UnityEngine.Rect,System.Type,UnityEngine.GameObject,System.Boolean)">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="componentType"></param>
            <param name="go"></param>
            <param name="includeInactive"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Popup(System.Type,UnityEngine.GameObject,XCSJ.PluginCommonUtils.ESearchFlags,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            组件弹出式菜单
            </summary>
            <param name="componentType"></param>
            <param name="go"></param>
            <param name="searchFlags"></param>
            <param name="hasTextField"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonMenu``1(UnityEngine.GUIContent,``0,System.Action{``0},System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            按钮弹出式菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <param name="component"></param>
            <param name="onButton"></param>
            <param name="includeInactive"></param>
            <param name="style"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonMenu``1(UnityEngine.GUIContent,UnityEngine.GameObject,System.Action{UnityEngine.GameObject},System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            按钮弹出式菜单
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <param name="go"></param>
            <param name="onButton"></param>
            <param name="includeInactive"></param>
            <param name="style"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ButtonOfMiddlerCenter(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
            <summary>
            居中型按钮
            </summary>
            <param name="content"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Toolbar``1(``0,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            工具条
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <param name="style"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.Toolbar``1(``0,XCSJ.PluginCommonUtils.ENameTip,UnityEngine.GUILayoutOption[])">
            <summary>
            工具条
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <param name="nameTip"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.BeginHorizontal(System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            开始横向布局
            </summary>
            <param name="hasBoxBackground"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.BeginHorizontal(System.Int32,UnityEngine.GUILayoutOption[])">
            <summary>
            开始横向布局
            </summary>
            <param name="index">0=false;1=true;</param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EndHorizontal">
            <summary>
            结束横向布局
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.BeginVertical(System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            开始纵向布局
            </summary>
            <param name="hasBoxBackground"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.BeginVertical(System.Int32,UnityEngine.GUILayoutOption[])">
            <summary>
            开始纵向布局
            </summary>
            <param name="index"></param>
            <param name="options"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.EndVertical">
            <summary>
            结束纵向布局
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DrawOptionOnGUI(XCSJ.Tools.Option,System.Func{System.Object,System.Reflection.FieldInfo,System.Boolean},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object},System.Action{System.Object,System.Reflection.FieldInfo,System.Object})">
            <summary>
            绘制选项类对象
            </summary>
            <param name="option"></param>
            <param name="onGUI"></param>
            <param name="onAfterHorizontal"></param>
            <param name="onBeforeVertical"></param>
            <param name="onAfterVertical"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.RunScriptCmd(System.String,XCSJ.Scripts.IVarCollectionHost)">
            <summary>
            运行脚本
            </summary>
            <param name="cmd"></param>
            <param name="varCollectionHost"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.RunFunction(XCSJ.Scripts.Function,XCSJ.Scripts.IVarCollectionHost)">
            <summary>
            运行函数
            </summary>
            <param name="function"></param>
            <param name="varCollectionHost"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.hasScriptStringEditing">
            <summary>
            有脚本字符串正在编辑中
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.CancleScriptStringEdit">
            <summary>
            取消脚本字符串编辑
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetTexture2D(System.Type)">
            <summary>
            获取2D纹理
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.AddVariableSerializedProperty(UnityEditor.SerializedProperty,System.String,System.Int32@)">
            <summary>
            添加变量序列化属性
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="varName"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetVariableSerializedProperty(UnityEditor.SerializedProperty,System.String,System.Int32@)">
            <summary>
            获取变量序列化属性
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SetVariableValue(UnityEditor.SerializedProperty,XCSJ.Scripts.CustomVariable,System.String)">
            <summary>
            设置变量值
            </summary>
            <param name="variableSerializedProperty"></param>
            <param name="variable"></param>
            <param name="varValue"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ToAbbreviation(XCSJ.Scripts.EVarType)">
            <summary>
            变量类型转简写
            </summary>
            <param name="varType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ToGUIContent(XCSJ.Scripts.EVarType)">
            <summary>
            转GUI内容
            </summary>
            <param name="varType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DeleteArrayElementAtIndex(UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            删除数组元素通过索引
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="index"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DeleteArrayElementAtIndex(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,System.Int32)">
            <summary>
            当数组元素类型是Unity的Object类型时，删除索引项需要特殊处理！
            </summary>
            <param name="arraySerializedProperty"></param>
            <param name="elementSerializedProperty"></param>
            <param name="index"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DeleteArrayInvalidElements(UnityEditor.SerializedProperty)">
            <summary>
            删除数组无效元素
            </summary>
            <param name="arraySerializedProperty"></param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonFun.Assets">
            <summary>
            资产文件夹名称
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonFun.XDreamerInAssetsPath">
            <summary>
            XDreamer在资产文件夹的路径
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ToAssetsPath(System.String)">
            <summary>
            将全路径转为基于Assets的相对路径；会同步将路径分隔符\\转为/
            </summary>
            <param name="fullPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ToFullPath(System.String)">
            <summary>
            将基于Assets的相对路径转为全路径；会同步将路径分隔符\\转为/
            </summary>
            <param name="assetsPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ConvertAbsoluteToAssetsRelativePath(System.String)">
            <summary>
            转换绝对路径到相对路径
            </summary>
            <param name="absolutePath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetXDreamerPath(System.String)">
            <summary>
            获取XDreamer路径
            </summary>
            <param name="folder">基于XDreamer的相对文件夹路径</param>
            <returns>相对资产文件夹的路径</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetPath(XCSJ.EditorCommonUtils.EFolder)">
            <summary>
            获取文件夹路径：获取相对Assets文件夹的路径
            </summary>
            <param name="folder"></param>
            <returns>相对Assets文件夹的路径，不携带Assets/前缀的路径</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetAssetsPath(XCSJ.EditorCommonUtils.EFolder)">
            <summary>
            获取资产路径
            </summary>
            <param name="folder"></param>
            <returns>相对资产文件夹的路径</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetFullPath(XCSJ.EditorCommonUtils.EFolder)">
            <summary>
            获取全路径
            </summary>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadFromAssets``1(System.String,``0)">
            <summary>
            从资产文件夹中加载资源
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadFromXDreamer``1(System.String,System.String,``0)">
            <summary>
            从XDreamer文件中加载资源
            </summary>
            <typeparam name="T"></typeparam>
            <param name="folder"></param>
            <param name="nameWithExt"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadFromXDreamer``1(XCSJ.EditorCommonUtils.EFolder,System.String,``0)">
            <summary>
            从XDreamer文件中加载资源
            </summary>
            <typeparam name="T"></typeparam>
            <param name="folder"></param>
            <param name="nameWithExt"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadAndInstantiateFromAssets``1(System.String)">
            <summary>
            从资产文件夹中加载并实例化对象：支持在Unity编辑器中执行撤销与重做；
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadAndInstantiateFromAssets(System.String,System.String,UnityEngine.Transform,System.Boolean)">
            <summary>
            从资产文件夹中加载并实例化对象：支持在Unity编辑器中执行撤销与重做；
            </summary>
            <param name="path"></param>
            <param name="name"></param>
            <param name="parent"></param>
            <param name="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadTexture2D(System.String)">
            <summary>
            同步加载图片;可加载tiff，jpg，png
            </summary>
            <param name="path">需要在资源文件夹下（不在的没测试，也没必要测试，因为场景资源都在Assets文件夹下）；形如：Assets/Texture/a.jpg</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadTextureFromXDreamer_Gizmos(System.String)">
            <summary>
            从指定文件夹中获取指定名称的图片;
            </summary>
            <param name="nameWithExt">文件名称，带扩展名</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadTextureFromXDreamer_Gizmos(System.Type,System.String,System.String)">
            <summary>
            从指定文件夹中获取指定名称的图片;
            </summary>
            <param name="type">会使用 type.ToString() 的格式</param>
            <param name="prefix"></param>
            <param name="suffixWithExt">后缀格式带扩展名;默认为" Icon.tiff"</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadTextureFromXDreamer_Gizmos(System.Type,System.Func{System.Type,System.String},System.String)">
            <summary>
            从XDreamer的Gizmos中加载纹理
            </summary>
            <param name="type"></param>
            <param name="typeToNameFunc"></param>
            <param name="suffixWithExt"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.LoadTextureFromXDreamer_EditorResources(System.String)">
            <summary>
            从指定文件夹中获取指定名称的图片;
            </summary>
            <param name="nameWithExt">文件名称，带扩展名</param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.XCSJWatermaker">
            <summary>
            XCSJ水印纹理
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.XCSJLogo">
            <summary>
            XCSJ的Logo纹理
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.XDreamerLogo">
            <summary>
            XDreamer的Logo纹理
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.GizmosDefaultIcon">
            <summary>
            Gizmos默认纹理图标
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonFun.GizmosDefaultIcon32x32">
            <summary>
            默认的32x32像素的Gizmos纹理图标
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.MarkSceneDirty">
            <summary>
            标记当前场景为脏场景，即需要保存的场景
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.ClearConsole">
            <summary>
            关闭控制台
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.SetScriptExecutionOrder(UnityEngine.MonoBehaviour,System.Int32)">
            <summary>
            设置脚本执行顺序
            </summary>
            <param name="behaviour"></param>
            <param name="order"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.OpenMonoScript(System.Object)">
            <summary>
            打开Mono脚本
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.PingObject(UnityEngine.Object,System.Boolean)">
            <summary>
            Ping对象
            </summary>
            <param name="obj">待Ping的对象</param>
            <param name="force">是否强制Ping对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.PingSceneAssetObject(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            Ping场景资产对象
            </summary>
            <param name="scene"></param>
            <param name="force">是否强制Ping对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.PingAssetObject(System.String,System.Boolean)">
            <summary>
            Ping资产对象
            </summary>
            <param name="assetPath"></param>
            <param name="force">是否强制Ping对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.OpenInspectorWindow">
            <summary>
            打开检查器窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.RepaintInspector">
            <summary>
            刷新检查器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetPropertyNameInInspector(UnityEngine.Object)">
            <summary>
            获取对象在检查器中可显示的属性名称数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorMethod(System.String,UnityEngine.Object[])">
            <summary>
            调用编辑器方法
            </summary>
            <param name="name"></param>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorMethod(System.String,System.Collections.Generic.IEnumerable{UnityEngine.Object})">
            <summary>
            调用编辑器方法
            </summary>
            <param name="name"></param>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorOnEnable(UnityEngine.Object[])">
            <summary>
            调用编辑器启用
            </summary>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorOnEnable(System.Collections.Generic.IEnumerable{UnityEngine.Object})">
            <summary>
            调用编辑器启用
            </summary>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorOnDisable(UnityEngine.Object[])">
            <summary>
            调用编辑器禁用
            </summary>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.InvokeEditorOnDisable(System.Collections.Generic.IEnumerable{UnityEngine.Object})">
            <summary>
            调用编辑器禁用
            </summary>
            <param name="objects"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DelayCall(System.Single,System.Object,System.Action{System.Object},System.String)">
            <summary>
            延时调用
            </summary>
            <param name="delayTime">单位为秒</param>
            <param name="param"></param>
            <param name="action"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DelayCall(System.Action,System.Single,System.String)">
            <summary>
            延时调用
            </summary>
            <param name="delayTime">单位为秒</param>
            <param name="name"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.DelayCall(System.Action,System.String,System.Single)">
            <summary>
            延时调用
            </summary>
            <param name="action"></param>
            <param name="name"></param>
            <param name="delayTime"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.CreateManager``1(System.Action{XCSJ.PluginCommonUtils.Manager})">
            <summary>
            创建管理器
            </summary>
            <typeparam name="T"></typeparam>
            <param name="onCreate"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.TryEnsureScriptManagerWork">
            <summary>
            尝试确保脚本管理器启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.OpenManual(System.Object)">
            <summary>
            打开手册
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetStyle(XCSJ.ComponentModel.EComponentOption)">
            <summary>
            获取样式
            </summary>
            <param name="componentOptionType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.HandleException(UnityEngine.Object,System.Exception)">
            <summary>
            输出异常日志
            </summary>
            <param name="target">目标对象</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.HandleException(UnityEngine.Object,System.String,System.Exception)">
            <summary>
            输出异常日志
            </summary>
            <param name="target">目标对象</param>
            <param name="explane">异常解释</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.NaturalCompare(System.String,System.String)">
            <summary>
            自然比较
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonFun.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            这个函数很变态！！放在UI中是让只能在UNITY的编辑器中使用，不清楚发布到IOS，安卓什么可用不可用！！
            </summary>
            <typeparam name="TClass"></typeparam>
            <typeparam name="TStaticMember"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CustomEditorHelper">
            <summary>
            自定义编辑器助手类
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CustomEditorHelper.GetVersion(System.Type,System.Boolean)">
            <summary>
            获取类型对应的VersionAttribute信息
            </summary>
            <param name="type"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CustomEditorAttributes">
            <summary>
            自定义编辑器特性管理器；与UnityEditor.CustomEditorAttributes类实现基本一致；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CustomEditorAttributes.FindCustomEditorType(UnityEngine.Object,System.Boolean)">
            <summary>
            查找对象对应的自定义编辑器类型
            </summary>
            <param name="o"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CustomEditorAttributes.FindCustomEditorTypeByType(System.Type,System.Boolean)">
            <summary>
            通过类型查找对应的自定义编辑器类型
            </summary>
            <param name="type"></param>
            <param name="multiEdit"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ELanguageTypeSyncMode">
            <summary>
            语言类型同步模式
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ELanguageTypeSyncMode.SystemLanguage">
            <summary>
            系统语言
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ELanguageTypeSyncMode.EditorLanguage">
            <summary>
            编辑器语言
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ELanguageTypeSyncMode.CustomLanguage">
            <summary>
            自定义语言
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerBaseOption">
            <summary>
            XDreamer基础配置
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerBaseOption.newVersion">
            <summary>
            新版本
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.languageTypeSyncMode">
            <summary>
            语言类型同步模式:界面显示的语言类型的同步模式
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.languageType">
            <summary>
            语言类型,界面显示的语言类型
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerBaseOption.GetLanguageType">
            <summary>
            获取语言类型
            </summary>
            <returns></returns>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.commonMaterialPath">
            <summary>
            通用材质路径
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.gizmosIconDirectory">
            <summary>
            Gizmos图标库目录
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.exceptionHandle">
            <summary>
            异常处理
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.displayComponentScriptObject">
            <summary>
            显示脚本对象
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.warnColor">
            <summary>
            警告颜色
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.errorColor">
            <summary>
            错误颜色
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.displayWhenStart">
            <summary>
            启动时显示欢迎窗口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.autoCheckUpdate">
            <summary>
            自动检查更新
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerBaseOption.obsoleteCategoryItemDisplay">
            <summary>
            过期分类项显示方式
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerBaseOption.OnModified">
            <summary>
            当修改时回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerBaseOption.OnInit">
            <summary>
            当初始化
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EObsoleteDisplayRule">
            <summary>
            过期项显示方式
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EObsoleteDisplayRule.None">
            <summary>
            不显示
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EObsoleteDisplayRule.NoError">
            <summary>
            显示非错项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EObsoleteDisplayRule.All">
            <summary>
            显示所有项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EInspectorExceptionRule">
            <summary>
            检查器异常规则
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EInspectorExceptionRule.None">
            <summary>
            无 : 将异常信息忽略
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EInspectorExceptionRule.Info">
            <summary>
            信息 : 将异常信息以信息方式显示
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EInspectorExceptionRule.Warning">
            <summary>
            警告 : 将异常信息以警告方式显示
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EInspectorExceptionRule.Excepection">
            <summary>
            异常 : 将异常信息以异常方式显示
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption">
            <summary>
            XDreamer认证配置
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.newVersion">
            <summary>
            新版本
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.localDogServerPath">
            <summary>
            本地认证服务地址
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.outputLog">
            <summary>
            输出认证日志:输出XDreamer认证的日志信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.runtimeCheck">
            <summary>
            运行时检查
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.addressesExpanded">
            <summary>
            地址展开
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.addresses">
            <summary>
            认证服务地址信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.address">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.usersExpanded">
            <summary>
            用户展开
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.users">
            <summary>
            认证服务登录信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.user">
            <summary>
            用户
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.AddUser(XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User)">
            <summary>
            添加用户
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.AddAddress(XCSJ.Net.Address)">
            <summary>
            添加地址
            </summary>
            <param name="address"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User.password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User.#ctor(XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User)">
            <summary>
            构造
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.User.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
            <param name="password"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOption.OnModified">
            <summary>
            当修改时
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerAuthenticationOptionEditor">
            <summary>
            XDreamer认证选项编辑器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerAuthenticationOptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            当绘制GUI时
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption">
            <summary>
            XDreamer插件管理配置
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.newVersion">
            <summary>
            新版本
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.hideTimeoutComponent">
            <summary>
            隐藏过期插件
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.components">
            <summary>
            插件列表
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.CTI">
            <summary>
            Component Type Info插件类型信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.CTI.enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.GetNeedCreateManagerTypes">
            <summary>
            获取启用类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerComponentManagerOption.InitComponent">
            <summary>
            初始化插件
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerComponentManagerOptionEditor">
            <summary>
            XDreamer插件管理编辑器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerComponentManagerOptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            绘制GUI时
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerPreferencesAttribute">
            <summary>
            XDreamer首选项特性
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IXDreamerOption">
            <summary>
            XDreamer选项接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IXDreamerOption.version">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerOption">
            <summary>
            XDreamer选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerOption.version">
            <summary>
            版本;当前配置选项的版本号;递增型数值;
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerOption.newVersion">
            <summary>
            新版本
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOption.OnVersionChanged(System.Int32)">
            <summary>
            当版本变化时回调
            </summary>
            <param name="lastVersion"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOption.CheckVersion">
            <summary>
            检查版本
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOption.OnInit">
            <summary>
            <p>当配置选项发生以下任意一种情况时回调本函数:</p>
            <p>1、首次创建当前类型实例后；</p>
            <p>2、从磁盘读取反序列化类型实例后；</p>
            <p>3、从磁盘读取反序列化类型实例失败，重新创建当前类型实例后；</p>
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerOption`1">
            <summary>
            XDreamer选项泛型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerOption`1.instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerOption`1.weakInstance">
            <summary>
            弱实例
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerOption`1.xInstance">
            <summary>
            缓存实例
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.XDreamerOption`1.onModified">
            <summary>
            当修改时的回调事件
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOption`1.OnModified">
            <summary>
            当修改时回调
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IXDreamerOptionEditor">
            <summary>
            XDreamer选项编辑器接口
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IXDreamerOptionEditor`1">
            <summary>
            XDreamer选项编辑器泛型接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.IXDreamerOptionEditor`1.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerOptionEditor">
            <summary>
            XDreamer选项编辑器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOptionEditor.OnBeforeVertical">
            <summary>
            纵向绘制之前调用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerOptionEditor.OnGUI(System.Object,System.Reflection.FieldInfo)">
            <summary>
            绘制GUI时调用
            </summary>
            <param name="obj"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerOptionEditor`1">
            <summary>
            XDreamer选项编辑器泛型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerOptionEditor`1.preference">
            <summary>
            首选项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerPreferences">
            <summary>
            XDreamer首选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerPreferences.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow">
            <summary>
            打开窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow``1(System.Boolean)">
            <summary>
            打开窗口
            </summary>
            <typeparam name="T"></typeparam>
            <param name="otherUnexpand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow(System.Type,System.Boolean)">
            <summary>
            打开窗口
            </summary>
            <param name="optionType"></param>
            <param name="otherUnexpand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow(System.Boolean,System.Type[])">
            <summary>
            打开窗口
            </summary>
            <param name="otherUnexpand"></param>
            <param name="optionTypes"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow(System.String,System.Boolean)">
            <summary>
            打开窗口
            </summary>
            <param name="optionName"></param>
            <param name="otherUnexpand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.OpenWindow(System.Boolean,System.String[])">
            <summary>
            打开窗口
            </summary>
            <param name="otherUnexpand"></param>
            <param name="optionNames"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.SetOptionExpand``1(System.Boolean)">
            <summary>
            设置选项展开
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.SetOptionExpand(System.Type,System.Boolean)">
            <summary>
            设置选项展开
            </summary>
            <param name="optionType"></param>
            <param name="expand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.SetOptionExpand(System.String,System.Boolean)">
            <summary>
            设置选项展开
            </summary>
            <param name="optionName"></param>
            <param name="expand"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerPreferences.SetOptionExpand(System.Boolean)">
            <summary>
            设置选项展开
            </summary>
            <param name="expand"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer">
            <summary>
            脚本参数绘制器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.scriptManager">
            <summary>
            脚本管理器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.scriptStringInfo">
            <summary>
            脚本字符串信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnParamStringChanged">
            <summary>
            当参数字符串变更后
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.scriptParamValueDrawer">
            <summary>
            脚本参数值绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawValue">
            <summary>
            当绘制值
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawVariable">
            <summary>
            当绘制变量
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawExpression">
            <summary>
            当绘制表达式
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.Draw">
            <summary>
            绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawHead">
            <summary>
            当绘制头部
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawBody">
            <summary>
            当绘制身体
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer.OnDrawChanged">
            <summary>
            当绘制修改后：当绘制的界面发生任意修改时回调，即用户通过界面修改了当前脚本参数的信息；
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.CustomScriptParamValueDrawerAttribute">
            <summary>
            自定义脚本参数值绘制器特性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.CustomScriptParamValueDrawerAttribute.customValueDrawer">
            <summary>
            自定义值绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.CustomScriptParamValueDrawerAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="customValueDrawer"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.CustomScriptParamValueDrawerAttribute.#ctor(System.Type)">
            <summary>
            构造
            </summary>
            <param name="customValueDrawer"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.ScriptParamValueDrawer">
            <summary>
            脚本参数值绘制器:可用于覆盖脚本参数绘制器中针对值的默认绘制，便于用户自定义绘制脚本参数值的信息；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamValueDrawer.scriptParamDrawer">
            <summary>
            脚本参数绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamValueDrawer.OnDrawValue">
            <summary>
            当绘制值
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamValueDrawer.GetScriptParamValueDrawer(XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer)">
            <summary>
            获取脚本参数值绘制器
            </summary>
            <param name="scriptParamDrawer"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamValueDrawer.GetScriptParamValueDrawerType(System.String)">
            <summary>
            获取脚本参数值绘制器类型
            </summary>
            <param name="customValueDrawer"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.DefaultScriptParamDrawer">
            <summary>
            默认脚本参数绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.DefaultScriptParamDrawer.OnInit">
            <summary>
            当初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.DefaultScriptParamDrawer.OnDrawValue">
            <summary>
            绘制内容
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.DefaultScriptParamDrawer.ParamObjectToString(System.Object)">
            <summary>
            参数对象转字符串
            </summary>
            <param name="paramObject"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.DefaultScriptParamDrawer.StringToParamObject(System.String)">
            <summary>
            字符串转参数对象
            </summary>
            <param name="paramString"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer`1">
            <summary>
            脚本参数绘制器
            </summary>
            <typeparam name="TParamType"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer`1.paramTypeObject">
            <summary>
            参数类型对象：对基类中参数对象<see cref="P:XCSJ.Scripts.BaseScriptParamDrawer.paramObject"/>做类型转换操作；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer`1.DefaultParamObject">
            <summary>
            默认参数对象：默认返回<see cref="!:TParamType"/>类型的缺省值（即defalut(TParamType)，对于类类型返回null，对于值类型返回非null缺省值）
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawer`1.OnInit">
            <summary>
            当初始化
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.EnumScriptParamDrawer`1">
            <summary>
            枚举型脚本参数绘制器
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.EnumScriptParamDrawer`1.OnInit">
            <summary>
            当初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.EnumScriptParamDrawer`1.OnDrawValue">
            <summary>
            绘制内容
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.StringScriptParamDrawer">
            <summary>
            字符串型脚本参数绘制器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.StringScriptParamDrawer.DefaultParamObject">
            <summary>
            默认参数对象：默认返回空字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.StringScriptParamDrawer.OnDrawValue">
            <summary>
            绘制内容
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.StringScriptParamDrawer.OnParamStringChanged">
            <summary>
            当参数字符串变更后
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.UnityObjectScriptParamDrawer`1">
            <summary>
            Unity对象脚本参数绘制器
            </summary>
            <typeparam name="TParamType"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo">
            <summary>
            脚本字符串信息：用于构建一句有效的脚本字符串
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.#ctor(XCSJ.Scripts.ScriptString,XCSJ.Scripts.IScriptDriver,UnityEditor.SerializedProperty,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="scriptString"></param>
            <param name="scriptDriver"></param>
            <param name="scriptStringSP"></param>
            <param name="setScript"></param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo._script">
            <summary>
            脚本对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.script">
            <summary>
            脚本对象 属性器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.returnValue">
            <summary>
            返回值：用于增加新的返回值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.returnValues">
            <summary>
            返回值列表
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.scriptParamDrawers">
            <summary>
            参数字典
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.scriptString">
            <summary>
            脚本字符串对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.scriptDriver">
            <summary>
            脚本驱动器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.scriptStringSP">
            <summary>
            脚本字符串序列化属性
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.ToScriptString">
            <summary>
            转脚本字符串对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptStringInfo.FromScriptString(XCSJ.Scripts.ScriptString,XCSJ.Scripts.IScriptDriver,UnityEditor.SerializedProperty)">
            <summary>
            从脚本字符串对象构建信息
            </summary>
            <param name="scriptString"></param>
            <param name="scriptDriver"></param>
            <param name="scriptStringSP"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper">
            <summary>
            脚本参数绘制器助手
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper.drawerDatas">
             <summary>
            绘制器字典
             </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper.#cctor">
            <summary>
            静态构造
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper.DefaultData(XCSJ.Scripts.EParamType)">
            <summary>
            默认脚本参数绘制器
            </summary>
            <param name="paramType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper.GetScriptParamDrawerType(XCSJ.Scripts.EParamType)">
            <summary>
            获取脚本参数绘制器类型
            </summary>
            <param name="paramType"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CNScripts.ScriptParamDrawerHelper.NewScriptParamDrawer(XCSJ.Scripts.Param,System.Action{XCSJ.Scripts.BaseScriptParamDrawer})">
            <summary>
            新建脚本参数绘制器
            </summary>
            <param name="param"></param>
            <param name="beforeOnInit"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector">
            <summary>
            组件集检查器；本类不推荐用户直接继承；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.ComponentsString">
            <summary>
            组件列表字段名称
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.GetTexture2D(System.Type)">
            <summary>
            获取2D纹理
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.componentCollection">
            <summary>
            组件集对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.componentHeaderMenuName">
            <summary>
            组件头部菜单名称；默认为空字符串；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.inspectors">
            <summary>
            组件关联的基础检查器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.GetInspector(XCSJ.PluginCommonUtils.ComponentModel.Component)">
            <summary>
            获取基础检查器
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnEnable">
            <summary>
            启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDisable">
            <summary>
            禁用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDrawScript(UnityEditor.SerializedProperty)">
            <summary>
            当绘制脚本
            </summary>
            <param name="serializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDrawHelpInfo">
            <summary>
            绘制辅助信息
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnNameWillChange(XCSJ.PluginCommonUtils.ComponentModel.Model,System.String)">
            <summary>
            名称将要修改时回调
            </summary>
            <param name="model"></param>
            <param name="newName"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnNameChanged(XCSJ.PluginCommonUtils.ComponentModel.Model,System.String)">
            <summary>
            名称已修改后回调
            </summary>
            <param name="model"></param>
            <param name="oldName"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDrawName">
            <summary>
            绘制名称
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDrawComponents">
            <summary>
            当绘制组件列表时回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector.OnDrawComponetHandleGUI">
            <summary>
            当绘制组件处理界面；包括粘贴，添加组件等；
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2">
            <summary>
            组件集检查器泛型类
            </summary>
            <typeparam name="T">组件集类型</typeparam>
            <typeparam name="TComponent">组件类型</typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.componentCollection">
            <summary>
            组件集对象
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.OnDrawComponentHeader(`1,System.Int32,UnityEditor.SerializedProperty)">
            <summary>
            当绘制组件头部时回调
            </summary>
            <param name="component">组件对象</param>
            <param name="index">组件的索引</param>
            <param name="componentSP">组件的序列化属性</param>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.onBeforeComponentsVertical">
            <summary>
            纵向绘制组件列表之前回调
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.onAfterComponentsVertical">
            <summary>
            纵向绘制组件列表之后回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.OnDrawComponents">
            <summary>
            当绘制组件列表时回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.OnDrawComponetHandleGUI">
            <summary>
            当绘制组件处理界面；包括粘贴，添加组件等；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.addComponent">
            <summary>
            添加组件
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.ComponentCollectionInspector`2.itemPath">
            <summary>
            项路径
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute">
            <summary>
            组件头部菜单特性，在组件集中绘制组件头部时右键点击弹出的按钮;如索引间隔值大于等于10，将在两者之间插入分割条;同一函数上被多个相同名称的本特性修饰时，仅随机使用其中的一个；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute.itemName">
            <summary>
            项名称
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute.types">
            <summary>
            期望显示菜单的限定类型数组;如果为空，则不限类型；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute.forChildrenType">
            <summary>
            期望显示菜单的限定类型数组中类型的子类类型是否生效
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuAttribute.#ctor(System.String,System.String,System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="itemName">项名称；多层级使用/间隔</param>
            <param name="types">期望显示菜单的限定类型数组;如果为空，则不限类型；</param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuContext">
            <summary>
            组件头部菜单语境类
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuContext.component">
            <summary>
            被点击的组件
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuContext.serializedObject">
            <summary>
            组件对应的序列化对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentHeaderMenuContext.funcType">
            <summary>
            当前关联的静态函数的执行类型
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.EFuncType">
            <summary>
            函数（功能）类型
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.EFuncType.Click">
            <summary>
            点击；用户点击菜单后的函数调用；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.EFuncType.Valid">
            <summary>
            验证；弹出菜单后的菜单中显示的项能否被点击，即验证对应项的可点击性；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ComponentModel.EFuncType.Visable">
            <summary>
            可视；弹出菜单后的是否在菜单中显示对应的项,即对应项是否可见；
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentInspector">
            <summary>
            组件检查器
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentInspector`1">
            <summary>
            组件检查器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentInspector`1.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentInspector`1.OnOptionModify(XCSJ.Tools.Option)">
            <summary>
            当首选项的配置发生修改时回调
            </summary>
            <param name="option">发生修改的配置对象</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.ComponentInspector`1.OnDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper">
            <summary>
            编辑器组件模型辅助类；ComponentModel简写CM
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnNameWillChange(XCSJ.PluginCommonUtils.ComponentModel.Model,System.String)">
            <summary>
            名称将要修改时回调
            </summary>
            <param name="model"></param>
            <param name="newName"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnDeleted(XCSJ.PluginCommonUtils.ComponentModel.Model,System.Boolean)">
            <summary>
            在移除之后不再做撤销记录，仅在将要删除时做一次处理；
            </summary>
            <param name="model"></param>
            <param name="deleteObject"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnWillAddComponent(XCSJ.PluginCommonUtils.ComponentModel.ComponentCollection,XCSJ.PluginCommonUtils.ComponentModel.Component)">
            <summary>
             当将要添加组件时回调；此时组件还未加入组件集；
            </summary>
            <param name="componentCollection"></param>
            <param name="component"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnAddComponent(XCSJ.PluginCommonUtils.ComponentModel.Component)">
            <summary>
             当添加组件时回调；此时组件已加入组件集；
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnWillRemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.Component)">
            <summary>
            将要移除组件时回调；此时组件还未从组件集中移除；
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnRemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.Component)">
            <summary>
            当移除组件时回调；此时组件已经移除
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnInstanced(UnityEngine.Object,UnityEngine.Object)">
            <summary>
             对象实例化后的回调；此时对象已经创建，但未调用初始化；
            </summary>
            <param name="obj1"></param>
            <param name="obj2"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.OnCreated(UnityEngine.Object)">
            <summary>
            有组件对象被创建时回调；此时对象已经创建并已调用初始化；
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CanAddComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection,System.Type)">
            <summary>
            检测组件集是否可添加指定类型的组件
            </summary>
            <param name="componentCollection">待检测的组件集</param>
            <param name="type">待添加的组件类型</param>
            <returns>可添加返回True；否则返回False</returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CanAddComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection,System.Type,System.Collections.Generic.List{System.Type}@,System.Collections.Generic.List{System.Type}@)">
            <summary>
            检测组件集是否可添加指定类型的组件
            </summary>
            <param name="componentCollection">待检测的组件集</param>
            <param name="type">待添加的组件类型</param>
            <param name="missingTypes">添加组件时需同步添加的缺失类型；即检测组件类型上的RequireComponent特性修饰情况；</param>
            <param name="invalidTypes">缺失类型中的无效类型</param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CanAddComponents(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection,System.Type[])">
            <summary>
            检测组件集是否可添加指定类型的组件
            </summary>
            <param name="componentCollection"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.AddComponent``1(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection)">
            <summary>
            添加组件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="componentCollection"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.AddComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection,System.Type)">
            <summary>
            添加组件
            </summary>
            <param name="componentCollection"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.AddComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection[],System.Type)">
            <summary>
            添加组件
            </summary>
            <param name="componentCollections"></param>
            <param name="type"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CanRemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponent)">
            <summary>
            判断当前组件集中能否移除指定的组件对象
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CanRemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection,XCSJ.PluginCommonUtils.ComponentModel.IComponent)">
            <summary>
            判断当前组件集中能否移除指定的组件对象
            </summary>
            <param name="componentCollection"></param>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.RemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponentCollection[],XCSJ.PluginCommonUtils.ComponentModel.IComponent,System.Boolean)">
            <summary>
            移除组件
            </summary>
            <param name="componentCollections"></param>
            <param name="component"></param>
            <param name="deleteObject"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.RemoveComponent(XCSJ.PluginCommonUtils.ComponentModel.IComponent,System.Boolean)">
            <summary>
            移除组件
            </summary>
            <param name="component"></param>
            <param name="deleteObject"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.CopyComponent``1(``0)">
            <summary>
            复制组件；将组件对象加入组件剪贴板中；
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="component"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.PasteComponent``1(XCSJ.PluginCommonUtils.ComponentModel.ComponentCollection,System.Boolean)">
            <summary>
            粘贴组件；会执行组件克隆；
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="componentCollection"></param>
            <param name="withData"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ComponentModel.EditorCMHelper.ComponentInClicpboard``1">
            <summary>
            获取组件剪贴板中的对象
            </summary>
            <typeparam name="TComponent"></typeparam>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ComponentClicpboard`1">
            <summary>
            组件剪贴板模板类
            </summary>
            <typeparam name="TComponent">组件模板类</typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ComponentModel.ComponentClicpboard`1.component">
            <summary>
            组件对象
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ModelInspector">
            <summary>
            模型检查器
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ComponentModel.ModelInspector`1">
            <summary>
            模型检查器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CategoryEditorWindow`1">
            <summary>
            分类视图基类编辑器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.categoryView">
            <summary>
            分类视图
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.searchTextID">
            <summary>
            搜索文本ID
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.timedRepaint">
            <summary>
            启动刷新
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.timeRepaintIntervalTime">
            <summary>
            刷新时间间隔
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OpenAndFocus(System.String)">
            <summary>
            打开
            </summary>
            <param name="categoryName"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OnOptionModified(XCSJ.Tools.Option)">
            <summary>
            首选项修改
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.ReloadCategoryList">
            <summary>
            重新加载分类数据
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OnGUI">
            <summary>
            GUI绘制
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.DrawCategoryView">
            <summary>
            绘制分类视图
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.GetCategoryList">
            <summary>
            获取分类数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.categoryLayout">
            <summary>
            布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.drawCanClickOnly">
            <summary>
            仅绘制可点击项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryEditorWindow`1.OnHelp">
            <summary>
            帮助按钮点击
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CategoryConfig">
            <summary>
            分类配置
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.CategoryConfig.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryConfig.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryConfig.categoryLayout">
            <summary>
            布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.CategoryConfig.drawCanClickOnly">
            <summary>
            布局
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.IEditorWindow">
            <summary>
            编辑器窗口接口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.IEditorWindow.UpdateInstance">
            <summary>
            更新实例
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.AbstractEditorWindow">
            <summary>
            抽象的编辑器窗口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.AbstractEditorWindow.propertyCache">
            <summary>
            属性缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.Tr(System.String)">
            <summary>
            翻译
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.TrLabel(System.String)">
            <summary>
            翻译标签
            </summary>
            <param name="propertyPath"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.TrLabel(System.String,XCSJ.PluginCommonUtils.ENameTip)">
            <summary>
            翻译标签：使用属性缓存<see cref="P:XCSJ.EditorCommonUtils.AbstractEditorWindow.propertyCache"/>翻译标签
            </summary>
            <param name="propertyPath"></param>
            <param name="nameTip"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.AbstractEditorWindow.languageCache">
            <summary>
            语言缓存
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.OnLanguageCacheChanged">
            <summary>
            当语言缓存变更后回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.UpdateTitleContent">
            <summary>
            更新标题内容
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.OnUndoRedoPerformed">
            <summary>
            当执行撤消重做时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.AddItemsToMenu(UnityEditor.GenericMenu)">
            <summary>
            添加项到菜单：窗口增加点击的菜单项
            </summary>
            <param name="menu"></param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.AbstractEditorWindow.menu_Manual">
            <summary>
            菜单文档手册
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.AbstractEditorWindow.menu_EditScript">
            <summary>
            菜单编辑脚本
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.AbstractEditorWindow.AddEditScriptMenu(UnityEditor.GenericMenu)">
            <summary>
            添加编辑脚本菜单
            </summary>
            <param name="menu"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorWindow`1">
            <summary>
            编辑器窗口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EditorWindow`1._instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorWindow`1.instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.GetInstance">
            <summary>
            获取实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorWindow`1.valid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OpenAndFocus">
            <summary>
            打开并聚焦
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.UpdateInstance">
            <summary>
            更新实例
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnNewSceneCreated(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
            <summary>
            当新场景创建时回调
            </summary>
            <param name="scene"></param>
            <param name="setup"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnActiveSceneChangedInEditMode(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
            <summary>
            编辑模式下激活场景变化时回调
            </summary>
            <param name="scene1"></param>
            <param name="scene2"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneOpening(System.String,UnityEditor.SceneManagement.OpenSceneMode)">
            <summary>
            场景打开时回调
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneOpened(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.OpenSceneMode)">
            <summary>
            场景已打开后回调
            </summary>
            <param name="scene"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneClosing(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            场景关闭时回调
            </summary>
            <param name="scene"></param>
            <param name="removingScene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneClosed(UnityEngine.SceneManagement.Scene)">
            <summary>
            场景已关闭后回调
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneSaving(UnityEngine.SceneManagement.Scene,System.String)">
            <summary>
            场景保存时回调
            </summary>
            <param name="scene"></param>
            <param name="path"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnSceneSaved(UnityEngine.SceneManagement.Scene)">
            <summary>
            场景已保存后回调
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnHierarchyChanged">
            <summary>
            层级窗口发生变化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnPlayModeStateChanged(UnityEditor.PlayModeStateChange)">
            <summary>
            播放模式发生变化时回调
            </summary>
            <param name="playModeStateChanged">播放模式变化</param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorWindow`1.timedRepaint">
            <summary>
            定时绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorWindow`1.timeRepaintIntervalTime">
            <summary>
            定时绘制间隔时间
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnTimedRepaint">
            <summary>
            当定时绘制时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindow`1.OnOptionModified(XCSJ.Tools.Option)">
            <summary>
            当选项修改时
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.TimedAction">
            <summary>
            定时动作
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.TimedAction.inTimed">
            <summary>
            在定时中
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TimedAction.Start(System.Action,System.Single,System.String)">
            <summary>
            启动
            </summary>
            <param name="onAction"></param>
            <param name="intervalTime"></param>
            <param name="name"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TimedAction.StartIfNeed(XCSJ.EditorCommonUtils.ITimeRepaint)">
            <summary>
            如果需要则启动
            </summary>
            <param name="timeRepaint"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.TimedAction.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ITimeRepaint">
            <summary>
            定时绘制接口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ITimeRepaint.timedRepaint">
            <summary>
            标识是否定时绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ITimeRepaint.timeRepaintIntervalTime">
            <summary>
            定时绘制的间隔时间
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ITimeRepaint.OnTimedRepaint">
            <summary>
            档定时绘制时回调
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorWindowWithScrollView`1">
            <summary>
            带滚动视图的编辑器窗口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EditorWindowWithScrollView`1.scrollPosition">
            <summary>
            滚动位置
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindowWithScrollView`1.OnGUIWithScrollView">
            <summary>
            绘制带滚动视图的GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindowWithScrollView`1.DefaultOnGUI">
            <summary>
            默认绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorWindowWithScrollView`1.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EnumEditor">
            <summary>
            枚举编辑器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EnumEditor.DrawOpenButton">
            <summary>
            绘制打开按钮
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.variableName">
            <summary>
            变量名
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.enumVariableNameSuffix">
            <summary>
            枚举变量名后缀
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.separator">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.enumValue">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.displayEnum">
            <summary>
            显示枚举
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EnumEditor.enumVariableName">
            <summary>
            枚举变量名
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.EnumEditor.addEnum">
            <summary>
            添加枚举:如变量不存在,会同步添加变量
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EnumEditor.enumVariableNameValid">
            <summary>
            枚举变量名有效
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EnumEditor.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EnumEditor.OnGUIWithScrollView">
            <summary>
            绘制带滚动视图的GUI
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputEditorWindow">
            <summary>
            输入窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow.PopupName(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            弹出输入名称窗口
            </summary>
            <param name="rect"></param>
            <param name="defaultName"></param>
            <param name="onInputName"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow.Create``1(UnityEditor.EditorWindow,UnityEngine.GUIContent,``0,System.Action{UnityEditor.EditorWindow,``0},System.Action{UnityEditor.EditorWindow,``0},System.String,System.Action{UnityEditor.EditorWindow},System.Func{UnityEditor.EditorWindow,``0,``0},System.Action{UnityEditor.EditorWindow},System.Boolean,System.Action{UnityEditor.EditorWindow})">
            <summary>
            创建
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parentEditorWindow"></param>
            <param name="titleContent"></param>
            <param name="value"></param>
            <param name="okCallback"></param>
            <param name="cancelCallback"></param>
            <param name="description"></param>
            <param name="onBeforeGUI"></param>
            <param name="onGUIInput"></param>
            <param name="onAfterGUI"></param>
            <param name="utility"></param>
            <param name="show"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow.Create``1(UnityEngine.Rect,UnityEngine.GUIContent,``0,System.Action{UnityEditor.EditorWindow,``0},System.Action{UnityEditor.EditorWindow,``0},System.String,System.Action{UnityEditor.EditorWindow},System.Func{UnityEditor.EditorWindow,``0,``0},System.Action{UnityEditor.EditorWindow},System.Boolean,System.Action{UnityEditor.EditorWindow})">
            <summary>
            创建
            </summary>
            <typeparam name="T"></typeparam>
            <param name="windowRect"></param>
            <param name="titleContent"></param>
            <param name="value"></param>
            <param name="okCallback"></param>
            <param name="cancelCallback"></param>
            <param name="description"></param>
            <param name="onBeforeGUI"></param>
            <param name="onGUIInputT"></param>
            <param name="onAfterGUI"></param>
            <param name="utility"></param>
            <param name="show"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputStringEditorWindow">
            <summary>
            输入字符串编辑器窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputStringEditorWindow.OnGUIInputT">
            <summary>
            绘制输入GUI
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputFloatEditorWindow">
            <summary>
            输入浮点数编辑器窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputFloatEditorWindow.OnGUIInputT">
            <summary>
            绘制输入GUI
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputIntEditorWindow">
            <summary>
            输入整形编辑器窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputIntEditorWindow.OnGUIInputT">
            <summary>
            绘制输入GUI
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.InputEditorWindow`1">
            <summary>
            输入编辑敞口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.description">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.okCallback">
            <summary>
            确认点击回调
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.cancelCallback">
            <summary>
            取消点击回调
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.onBeforeGUI">
            <summary>
            当绘制GUI之前
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.onGUIInputT">
            <summary>
            当绘制输入GUI
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.InputEditorWindow`1.onAfterGUI">
            <summary>
            当绘制GUI之后
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow`1.OnGUIInputT">
            <summary>
            绘制输入GUI
            </summary>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.InputEditorWindow`1.timedRepaint">
            <summary>
            定制绘制
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.InputEditorWindow`1.timeRepaintIntervalTime">
            <summary>
            定制绘制间隔时间
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow`1.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow`1.OnLostFocus">
            <summary>
            当失去焦点强行聚焦
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.InputEditorWindow`1.DefaultShow(UnityEditor.EditorWindow)">
            <summary>
            默认显示
            </summary>
            <param name="window"></param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.WelcomeWindow">
            <summary>
            欢迎窗口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.InitWithCheck">
            <summary>
            初始化检查
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.WelcomeWindow.autoCheckUpdate">
            <summary>
            自动检查更新
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.OnEnable">
            <summary>
            当启用时
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow._displayWhenStart">
            <summary>
            启动显示本窗口
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.WelcomeWindow.displayWhenStart">
            <summary>
            启动显示本窗口
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.OnOptionModified(XCSJ.Tools.Option)">
            <summary>
            当选项修改时
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.OnGUI">
            <summary>
            GUI绘制
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.CheckVersion(System.Boolean)">
            <summary>
            检查版本
            </summary>
            <param name="quiteIfIsLatest"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.WelcomeWindow.HandleVersionResponse">
            <summary>
            处理版本响应
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.WelcomeWindow.Respone">
            <summary>
            响应
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.Respone.code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.Respone.msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.WelcomeWindow.VersionRespone">
            <summary>
            版本响应
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.VersionRespone.version">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.WelcomeWindow.ERequestVersionStatus">
            <summary>
            请求版本状态
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.WelcomeWindow.VersionInfo">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.VersionInfo.versionName">
            <summary>
            版本名称
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.VersionInfo.versionNo">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.VersionInfo.versionUrl">
            <summary>
            版本Url
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.WelcomeWindow.VersionInfo.versionDescription">
            <summary>
            版本描述
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerEditorWindow">
            <summary>
            XDreamer编辑器窗口
            是管理认证、组件和编辑器窗口的窗口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerEditorWindow.Title">
            <summary>
            窗口标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerEditorWindow.Create">
            <summary>
            创建
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerEditorWindow.timedRepaint">
            <summary>
            标识是否定时重绘
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerEditorWindow.timeRepaintIntervalTime">
            <summary>
            定时重绘的间隔时间
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerEditorWindow.selectToolbar">
            <summary>
            被选择的工具条
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerEditorWindow.OnEnable">
            <summary>
            当启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerEditorWindow.OnFocus">
            <summary>
            当禁用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerEditorWindow.OnGUIWithScrollView">
            <summary>
            当绘制带滚动视图的GUI时
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerEditorWindowAttribute">
            <summary>
            XDreamer编辑器属性
            继承自EditorWindow的编辑器需要在XDreamer根节点的编辑器窗口下显示，使用这个特性修饰即可
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerEditorWindowAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="category">分类</param>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorApplicationExtension">
            <summary>
            编辑器应用程序扩展
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorApplicationExtension.InitOnLoad">
            <summary>
            加载时初始化
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.EditorApplicationExtension.onHierarchyWindowItemGizmosIconClicked">
            <summary>
            层级窗口项Gizmos图标被点击事件；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorApplicationExtension.CallHierarchyWindowItemGizmosIconClicked(UnityEngine.Component,UnityEngine.Rect,UnityEngine.Texture2D)">
            <summary>
            调用层级窗口项Gizmos图标被点击事件；
            </summary>
            <param name="component"></param>
            <param name="rect"></param>
            <param name="texture2D"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorApplicationExtension.inWillChangePlaymode">
            <summary>
            在将要切换播放模式
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorApplicationExtension.DelayCall(System.Single,System.Object,System.Action{System.Object},System.String)">
            <summary>
            延时调用
            </summary>
            <param name="delayTime">延时时间,单位秒；如果时间小于等于0，则直接执行；</param>
            <param name="param">延时调用时的输入参数</param>
            <param name="action">延时调用的动作，参数为传入参数</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorApplicationExtension.DelayActionData">
            <summary>
            延时动作数据
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.EditorApplicationExtension.DelayActionData.delayedCallbackDateTime">
            <summary>
            延时回调日期时间
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorApplicationExtension.DelayActionData.#ctor(System.Single,System.Object,System.Action{System.Object},System.String)">
            <summary>
            构造
            </summary>
            <param name="delayTime"></param>
            <param name="param"></param>
            <param name="action"></param>
            <param name="name"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.EditorApplicationExtension.DelayActionData.Update(System.DateTime)">
            <summary>
            更新
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.EditorSceneManagerExtension">
            <summary>
            编辑器场景管理器扩展类
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerInspector">
            <summary>
            XDreamer组件Inspecto编辑器窗口类
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerInspector.Root">
            <summary>
            根对象
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.CreateXDreamer">
            <summary>
            创建XDreamer
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnSceneOpened(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.OpenSceneMode)">
            <summary>
            当场景已打开
            </summary>
            <param name="scene"></param>
            <param name="mode"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerInspector.isBuilding">
            <summary>
            在打包中
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnSceneGUI(XCSJ.EditorCommonUtils.Base.Kernel.ISceneView)">
            <summary>
            当绘制场景GUI时调用
            </summary>
            <param name="sceneView"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.UpdateAllManagers(System.Boolean)">
            <summary>
            更新所有管理器
            </summary>
            <param name="forceUpdate"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.TimedCheckAccess">
            <summary>
            程序发生了重新加载或编译的操作
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.ButtonWidth">
            <summary>
            按钮宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.IndexWidth">
            <summary>
            索引宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.VersionWidth">
            <summary>
            版本宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.ComponentKitWidth">
            <summary>
            组件包宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.ComponentTypeWidth">
            <summary>
            组件类型宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.GameObjectWidth">
            <summary>
            游戏对象宽度-界面标题宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.EnableWidth">
            <summary>
            启用宽度-界面标题宽度
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnEnable">
            <summary>
            启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnDrawMember(UnityEditor.SerializedProperty,XCSJ.EditorCommonUtils.PropertyData)">
            <summary>
            当绘制成员
            </summary>
            <param name="serializedProperty"></param>
            <param name="propertyData"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnOptionModify(XCSJ.Tools.Option)">
            <summary>
            当首选项的配置发生修改时回调
            </summary>
            <param name="option">发生修改的配置对象</param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.refreshPlugin">
            <summary>
            刷新插件GUI内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.authenticate">
            <summary>
            认证按钮GUI内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.importantTip">
            <summary>
            重要提示
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.noAccess">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.expiredComponents">
            <summary>
            过期组件
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.expiredFatalComponents">
            <summary>
            过期致命组件
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerInspector.EToolbar">
            <summary>
            工具条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.EToolbar.Authentication">
            <summary>
            认证信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.EToolbar.PluginManager">
            <summary>
            插件管理
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.EToolbar.EdtorWindow">
            <summary>
            编辑窗口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.selectToolbar">
            <summary>
            被选择的工具条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.authenticationRuntimePlatform">
            <summary>
            验证运行时平台
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector.knowLicense">
            <summary>
            了解授权
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.AuthenticateDelay(System.Single)">
            <summary>
            认证延时：延时执行软件认证
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.Authenticate">
            <summary>
            认证：执行权限认证
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.RecordDogCheckInfo">
            <summary>
            记录狗检查信息：记录编辑器认证信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.XDreamerInspector._managerTypeInfoGroup">
            <summary>
            管理器信息分组列表：用于界面插件管理绘制
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.InitManagerTypeInfoGroup">
            <summary>
            初始化管理器信息分组
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.XDreamerInspector.onCreatedManager">
            <summary>
            当创建管理器时回调
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerInspector.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerInspector.categoryLayout">
            <summary>
            布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.XDreamerInspector.drawCanClickOnly">
            <summary>
            仅绘制可点击项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.OnHelp">
            <summary>
            帮助按钮点击
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.GetCategoryList">
            <summary>
            获取XDreamer窗口分类
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerInspector.XDreamerEditorWindowItem">
            <summary>
            XDreamer编辑器窗口项
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.XDreamerEditorWindowItem.#ctor(XCSJ.Attributes.IndexAttribute,System.Reflection.MemberInfo)">
            <summary>
            XDreamer编辑器窗口项
            </summary>
            <param name="indexAttribute"></param>
            <param name="memberInfo"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.XDreamerEditorWindowItem.CanClick">
            <summary>
            可用性
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.XDreamerEditorWindowItem.OnClick">
            <summary>
            点击
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.XDreamerInspector.CSCAD">
            <summary>
            客户端安全证书认证数据
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.XDreamerInspector.GetLocalDogServerPathCache">
            <summary>
            获取缓存的本地认证服务地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.AbstractInteractInspector`1">
            <summary>
            抽象交互检查器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.AbstractInteractInspector">
            <summary>
            抽象交互检查器
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.InteractObjectInspector`1">
            <summary>
            交互对象检查器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.InteractObjectInspector">
            <summary>
            交互对象检查器
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.BaseInteractProviderInspector`1">
            <summary>
            基础交互提供者检查器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.Interactions.BaseInteractProviderInspector">
            <summary>
            基础交互提供者检查器
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.CNScriptOption">
            <summary>
            中文脚本配置
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScriptOption.autoUnexpandCategory">
            <summary>
            是否自动折叠目录，即脚本编辑器窗口内中文脚本命令选择项的目录切换时自动折叠上一次目录
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScriptOption.hideOtherWhenSearch">
            <summary>
            搜索时是否隐藏其他项，即将不在搜索结果中的脚本命令隐藏;
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScriptOption.hideEmptyCatetory">
            <summary>
            绘制时是否隐藏空目录
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.CNScriptOption.showInCurrentCategory">
            <summary>
            绘制时是否显示当前目录内的非选择项
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ScriptViewerWindow">
            <summary>
            脚本查看器窗口类
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.scriptManager">
            <summary>
            脚本管理器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.inScriptStringEdit">
            <summary>
            处于脚本字符串编辑中
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.DefaultOfRealtimeUpdate">
            <summary>
            实时更新的默认值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.realtimeUpdate">
            <summary>
            是否实时修改脚本-即同步更新到正在被编辑的脚本语句;默认进行实时更新；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.ensureCurrentScriptVisible">
            <summary>
            确保当前被选择的脚本在可视范围内;生效后被立刻修改为false；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.currentScriptStringInfo">
            <summary>
            当前正在编辑的脚本字符串信息对象
            </summary> 
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.currentScript">
            <summary>
            当前脚本对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.currentScriptString">
            <summary>
            当前正在编辑的脚本字符串
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.currentScriptStringSerializedProperty">
            <summary>
            当前脚本字符串序列化属性
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.currentVarCollectionHost">
            <summary>
            当前变量集合宿主
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.SearchScriptTextControlName">
            <summary>
            搜索框文本输入控件的名称
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow._searchScriptName">
            <summary>
            正在查找的脚本名字-模糊名
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.searchScriptName">
            <summary>
            正在查找的脚本名字-模糊名属性器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.searchResult">
            <summary>
            根据正在查找的脚本名字-模糊名的结果链表;存储脚本的ID值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow._searchIndex">
            <summary>
            根据正在查找的脚本名字在列表中的索引
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.searchIndex">
            <summary>
            根据正在查找的脚本名字在列表中的索引-属性器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.leftAreaWidth">
            <summary>
            左侧窗口宽度
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.leftAreaScrollPos">
            <summary>
            左侧 滚动条区域的位置信息
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.rigthAreaScrollPos">
            <summary>
            右侧 滚动条区域的位置信息
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.ScriptViewerWindow.onHasObjectUsed">
            <summary>
            当有Unity对象被使用时回调；
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.CallHasObjectUsed(UnityEngine.Object)">
            <summary>
            调用有对象已使用时间
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.timedRepaint">
            <summary>
            开启定时刷新
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnFocus">
            <summary>
            获取焦点
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnEnable">
            <summary>
            启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnDisable">
            <summary>
            禁用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnOptionModified(XCSJ.Tools.Option)">
            <summary>
            当选项被修改时
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnSceneClosing(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            当场景关闭中
            </summary>
            <param name="scene"></param>
            <param name="removingScene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnUndoRedoPerformed">
            <summary>
            发生撤销操作时，取消脚本字符串编辑
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnGUI">
            <summary>
            绘制GUI时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnSelectionChange">
            <summary>
            场景选择集变更时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnInspectorUpdate">
            <summary>
            10fps~即每秒10帧~窗口必须被创建了！
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnProjectChange">
            <summary>
            工程变更时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnActiveSceneChangedInEditMode(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
            <summary>
            编辑模式下激活场景变更时
            </summary>
            <param name="scene1"></param>
            <param name="scene2"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnNewSceneCreated(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
            <summary>
            新场景被创建时
            </summary>
            <param name="scene"></param>
            <param name="setup"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnPlayModeStateChanged(UnityEditor.PlayModeStateChange)">
            <summary>
            当播放模式切换时
            </summary>
            <param name="playModeStateChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnHeadGUI">
            <summary>
            绘制头部GUI
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.lookForward">
            <summary>
            向前查找
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.lookBackward">
            <summary>
            向后查找
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.execute">
            <summary>
            执行
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.submit">
            <summary>
            确定
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptViewerWindow.tipContent">
            <summary>
            提示
            </summary>
        </member>
        <member name="E:XCSJ.EditorCommonUtils.ScriptViewerWindow.onAfterCommandTitle">
            <summary>
            当绘制命令标题之后回调
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.OnBodyGUI">
            <summary>
            所有的脚本命令与当前脚本命令
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.SetLocalVarCollection">
            <summary>
            设置本地变量集合
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.returnValueStorageVariable">
            <summary>
            返回值存储变量
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.ScriptSelected">
            <summary>
            脚本被选择时，界面信息刷新操作
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.ForceRefresh">
            <summary>
            强制刷新
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.SetCurrentScriptString(UnityEditor.SerializedProperty,XCSJ.Scripts.IVarCollectionHost)">
            <summary>
            设置当前脚本字符串
            </summary>
            <param name="scriptStringSerializedProperty">脚本字符串对象对应的序列化属性对象</param>
            <param name="varCollectionHost">变量集合宿主</param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.FocusControl(System.String)">
            <summary>
            聚焦控件
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.SetDiseditScriptStringIfNeed(XCSJ.Scripts.ScriptString@)">
            <summary>
            如果必要，设置取消脚本字符串编辑模式
            </summary>
            <param name="scriptString">待检测的脚本字符串对象</param>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptViewerWindow.toObject">
            <summary>
            转对象
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarString_SwitchToObjectFlag(UnityEngine.Rect,System.String)">
            <summary>
            绘制变量字符串之切换转对象标识符
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarString_SwitchToObjectFlag(System.String,UnityEngine.GUILayoutOption[])">
            <summary>
            绘制变量字符串之切换转对象标识符
            </summary>
            <param name="varString"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.Add_ToObjectFlag(System.String)">
            <summary>
            添加转对象标识符
            </summary>
            <param name="varString"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.Remove_ToObjectFlag(System.String)">
            <summary>
            移除转对象标识符
            </summary>
            <param name="varString"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawGetHierarchyVarValueButton(System.String)">
            <summary>
            绘制获取层级变量值按钮
            </summary>
            <param name="varString"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawGetHierarchyVarValueButton(UnityEngine.Rect,System.String)">
            <summary>
            绘制获取层级变量值按钮
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarString(System.String,System.Action{System.String})">
            <summary>
            绘制变量字符串
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithBothHierarchyKeyExtension(System.String,System.Action{System.String})">
            <summary>
            绘制带设置与获取层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、设置与获取层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithSetHierarchyKeyExtension(System.String,System.Action{System.String})">
            <summary>
            绘制带设置层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、设置层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithGetHierarchyKeyExtension(System.String,System.Action{System.String})">
            <summary>
            绘制带获取层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、获取层级键扩展弹出式菜单
            </summary>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarString(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制变量字符串
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithBothHierarchyKeyExtension(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制带获取与设置层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、获取与设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithSetHierarchyKeyExtension(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制带设置层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、设置层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptViewerWindow.DrawVarStringWithGetHierarchyKeyExtension(UnityEngine.Rect,System.String,System.Action{System.String})">
            <summary>
            绘制带获取层级键扩展的变量字符串：会绘制变量字符串弹出式菜单、变量字符串文本框、删除按钮、获取层级键扩展弹出式菜单
            </summary>
            <param name="position"></param>
            <param name="varString"></param>
            <param name="onMenuItemClicked"></param>
            <returns></returns>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.VarStringEditorWindow">
            <summary>
            变量字符串编辑窗口
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.VarStringEditorWindow.Title">
            <summary>
            变量字符串编辑器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.InEdit(System.String)">
            <summary>
            在编辑中
            </summary>
            <param name="varString"></param>
            <returns></returns>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.VarStringEditorWindow.varString">
            <summary>
            变量字符串
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.VarStringEditorWindow.onChanged">
            <summary>
            当修改后的回调
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.VarStringEditorWindow.newVarString">
            <summary>
            新变量字符串
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.Open(System.String,System.Action{System.String})">
            <summary>
            打开
            </summary>
            <param name="varString"></param>
            <param name="onChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.OnDisable">
            <summary>
            当禁用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.OnGUI">
            <summary>
            当绘制GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.OnGUIWithScrollView">
            <summary>
            当绘制带滚动视图的GUI
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.CallVarStringChanged">
            <summary>
            调用变量字符串已变化
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.VarStringEditorWindow.inUndo">
            <summary>
            在撤销重做
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.VarStringEditorWindow.OnUndoRedoPerformed">
            <summary>
            当执行撤消重做时
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ScriptEditorWindow">
            <summary>
            脚本编辑器，即中文脚本的变量与函数编辑器
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.Init">
            <summary>
            静态主入口函数
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.leftSeparator">
            <summary>
            左分割条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.midSeparator">
            <summary>
            中分割条
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.leftArea">
            <summary>
            左侧区域
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.midArea">
            <summary>
            中间区域
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.rightArea">
            <summary>
            右侧区域
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.displayScriptEvents">
            <summary>
            脚本事件列表是否显示；对应左侧区域；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.displayScriptEvent">
            <summary>
            脚本事件是否显示；对应中间区域；
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.displayScriptManager">
            <summary>
            中文脚本是否显示；对应右侧区域；
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptEditorWindow.sameWidthLayout">
            <summary>
            等宽布局
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptEditorWindow.focusObject">
            <summary>
            聚焦对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptEditorWindow.timedRepaint">
            <summary>
            标识是否定时重绘
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnEnable">
            <summary>
            启用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnDisable">
            <summary>
            禁用时
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnPlayModeStateChanged(UnityEditor.PlayModeStateChange)">
            <summary>
            播放模式发生变化时回调
            </summary>
            <param name="playModeStateChanged"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnNewSceneCreated(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
            <summary>
            当新场景创建时回调
            </summary>
            <param name="scene"></param>
            <param name="setup"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnSceneOpening(System.String,UnityEditor.SceneManagement.OpenSceneMode)">
            <summary>
            场景打开时回调
            </summary>
            <param name="path"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnSceneOpened(UnityEngine.SceneManagement.Scene,UnityEditor.SceneManagement.OpenSceneMode)">
            <summary>
            场景已打开后回调
            </summary>
            <param name="scene"></param>
            <param name="mode"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnSceneClosing(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            场景关闭时回调
            </summary>
            <param name="scene"></param>
            <param name="removingScene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnSceneClosed(UnityEngine.SceneManagement.Scene)">
            <summary>
            场景已关闭后回调
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptEditorWindow.OnGUI">
            <summary>
            绘制GUI
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ScriptEditorWindow.selectObject">
            <summary>
            脚本事件对象
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.searchText">
            <summary>
            搜索文本
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.ScriptEditorWindow.varScope">
            <summary>
            变量作用域
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ManagerInspector">
            <summary>
            管理器检查器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ManagerInspector.HasAccess">
            <summary>
            有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ManagerInspector.OnInspectorGUI">
            <summary>
            当绘制检查器GUI
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ManagerInspector`1">
            <summary>
            管理器类的检查工具窗口模板类
            </summary>
            <typeparam name="TManager"></typeparam>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ManagerInspector`1.targetObject">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.ManagerInspector`1.manager">
            <summary>
            管理器对象
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.BaseManagerInspector`1">
            <summary>
            基础管理器类的检查工具窗口模板类
            </summary>
            <typeparam name="TManager"></typeparam>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.ScriptManagerInspector">
            <summary>
            中文脚本检查器
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptManagerInspector.OnEnable">
            <summary>
            启用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptManagerInspector.OnDisable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptManagerInspector.OnVariableValueChanged(XCSJ.Scripts.Variable)">
            <summary>
            当变量值变化后回调
            </summary>
            <param name="variable"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptManagerInspector.OnDrawScript(UnityEditor.SerializedProperty)">
            <summary>
            当绘制脚本
            </summary>
            <param name="serializedProperty"></param>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.ScriptManagerInspector.OnInspectorGUI">
            <summary>
            当绘制检查器GUI
            </summary>
        </member>
        <member name="T:XCSJ.EditorCommonUtils.UICommonOption">
            <summary>
            UI通用选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Clear">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Copy">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Paste">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Script">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Run">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Reset">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Update">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.New">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Insert">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.InsertChild">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Delete">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MovePrevious">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MoveNext">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MoveBegin">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MoveEnd">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Help">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.noteContent">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.unexplandContent">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.expandContent">
            <summary>
            常用的静态按钮文字内容
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._separatorWidth">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._separatorMinLeftWidth">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._separatorDefaultLeftWidth">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._separatorMinRightWidth">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._8">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._10">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._16">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._18">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._20">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._24">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._28">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._32">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._48">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._60">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._64">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._72">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._80">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._100">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._120">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._128">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption._200">
            <summary>
            宽度值
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.SeparatorWidth">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.SeparatorMinLeftWidth">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.SeparatorMinRightWidth">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width8">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width10">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width16">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width20">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width24">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width28">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width28x2">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width28x3">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width32">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width32x2">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width32x3">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width48">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width48x2">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width48x3">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width60">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width64">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width80">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width100">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width120">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width128">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Width200">
            <summary>
            常用的GUI布局宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth16">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth20">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth24">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth32">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth48">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth60">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth72">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth80">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth100">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth120">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxWidth200">
            <summary>
            常用的GUI布局最大宽度选项
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height0">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height16">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height18">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height20">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height24">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.Height32">
            <summary>
            布局高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxHeight16">
            <summary>
            布局最大高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxHeight24">
            <summary>
            布局最大高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.MaxHeight32">
            <summary>
            布局最大高
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.WH20x16">
            <summary>
            布局宽高20x16
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.WH24x16">
            <summary>
            布局宽高24x16
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.WH32x16">
            <summary>
            布局宽高32x16
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.WH48x16">
            <summary>
            布局宽高48x16
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.WH72x16">
            <summary>
            布局宽高72x16
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelSelectedStyle">
            <summary>
            标签选择样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.buttonToLabelSelectedStyle">
            <summary>
            按钮转标签选择样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.buttonToLabelStyle">
            <summary>
            按钮变为标签的风格
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.buttonToLabelGrayStyle">
            <summary>
            按钮转标签灰样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelGreenColor">
            <summary>
            文字绿色
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelGreenBG">
            <summary>
            标签绿色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelBlueBG">
            <summary>
            标签蓝色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelCyanBG">
            <summary>
            标签青色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelYellowBG">
            <summary>
            标签黄色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelYellowOrBlueBG">
            <summary>
            标签黄色或蓝色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelRedBG">
            <summary>
            标签红色背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.labelWhiteBG">
            <summary>
            标签白色背景
            </summary>
        </member>
        <member name="F:XCSJ.EditorCommonUtils.UICommonOption.pictureFileFilters">
            <summary>
            图片文件过滤器
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.richText">
            <summary>
            富文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.middleLeftBoxRichText">
            <summary>
            左中富文本包围盒
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.NotificationText">
            <summary>
            通知文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.NotificationBackground">
            <summary>
            通知背景
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.cnMessagesStyle">
            <summary>
            中文消息样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.richHelpBox">
            <summary>
            富帮助文本
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.ToolbarButton">
            <summary>
            工具条按钮样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.ToolbarSeachTextField">
            <summary>
            工具条搜索输入框样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.ToolbarSeachCancelButton">
            <summary>
            工具条搜索输入框取消样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.SearchTextField">
            <summary>
            搜索输入框样式
            </summary>
        </member>
        <member name="P:XCSJ.EditorCommonUtils.UICommonOption.SearchCancelButton">
            <summary>
            搜索输入框取消样式
            </summary>
        </member>
        <member name="M:XCSJ.EditorCommonUtils.UICommonOption.GetSelectedTexture">
            <summary>
            获取选中贴图
            </summary>
        </member>
    </members>
</doc>
